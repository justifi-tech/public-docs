"use strict";(self.webpackChunkpublic_docs=self.webpackChunkpublic_docs||[]).push([[4196],{4360:e=>{e.exports=JSON.parse('{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","servers":[{"url":"https://api.justifi.ai/v1","description":"JustiFi API"}],"info":{"description":"## HTTP Errors\\nThe JustiFi API may return a number of standard HTTP errors due to invalid requests. Some common errors are described\\nbelow to help you build with JustiFi.\\n\\n#### Bad Request\\nThe server cannot process the request. This error is most likely due to malformed request syntax.\\n- code: `400`\\n- status: `Bad Request`\\n\\n#### Unauthorized\\nSimilar to a `403 Forbidden`, but specifically when authentication is provided and has failed, or has not been provided.\\nThis error is most likely due to not including your API key in the request header.\\n- code: `401`\\n- status: `Unauthorized`\\n\\n#### Payment Required\\nThere was an error processing the payment. This response is returned when errors occur while tokenizing the payment method, such\\nas an invalid cvc or an expiration date in the past. This can also occur when making a payment and the card is declined.\\nIn that case, the error message will provide more specific information about why the request was declined.\\n- code: `402`\\n- status: `Payment Required`\\n\\n#### Forbidden\\nThe request was valid, but you are unable to execute the request. This error is most likely due to the API key that\\nwas used not having the necessary permissions, or attempting a prohibited action such as creating a duplicate\\nrecord where one already exists.\\n- code: `403`\\n- status: `Forbidden`\\n\\n#### Not Found\\nThe requested resource could not be found, but may be available in the future. This error is most likely due to\\nrequesting a resource by `id` that doesn\'t exist. You\'ll want to double check that you\'re referencing the correct\\n`id` and that it exists on your account.\\n- code: `404`\\n- status: `Not Found`\\n\\n#### Concurrent Request Error\\nThe request has an identical `Idempotency-Key` header for another request which either failed OR is processing at the same time. You can retry these requests without risk of double processing.\\n- code: `409`\\n- status: `Conflict`\\n\\n#### Unprocessable Entity\\nThe request was well-formed, but was unable to be processed due to semantic errors. This error is most likely due to\\nincluding invalid data in `POST`, `PATCH`, and `PUT` requests. Double check the request documentation to make sure\\nyou\'re supplying the required attributes, and that the attribute types are correct.\\n- code: `422`\\n- status: `Unprocessable Entity`\\n\\n#### Internal Server Error\\nAn internal server error occurred due to an unexpected condition. This error is most likely due to an issue with our\\nservers.\\n- code: `500`\\n- status: `Internal Server Error`\\n\\n#### Error Codes\\n\\nMany of our `4XX` errors will provide an error code in addition to their HTTP status. Here is a list of our error codes and a brief description of the error to provide more context when applicable.\\n\\n<table layout=\\"fixed\\">\\n  <tr>\\n    <th style=\\"width: 300px\\">Error Code</th>\\n    <th>Description</th>\\n  </tr>\\n  <tr>\\n    <td><code>acct_last_four_required</code></td>\\n    <td>Missing required parameter: acct_last_four</td>\\n  </tr>\\n  <tr>\\n    <td><code>amount_below_minimum</code></td>\\n    <td>Amount must be greater than 50</td>\\n  </tr>\\n  <tr>\\n    <td><code>amount_must_be_an_integer</code></td>\\n    <td>Amount must be an integer</td>\\n  </tr>\\n  <tr>\\n    <td><code>amount_required</code></td>\\n    <td>Missing required parameter: amount</td>\\n  </tr>\\n  <tr>\\n    <td><code>amount_above_maximum</code></td>\\n    <td>Amount must be lower than 100000000 ($1,000,000.00)</td>\\n  </tr>\\n  <tr>\\n    <td><code>amount_below_minimum</code></td>\\n    <td>Amount must be greater than 50</td>\\n  </tr>\\n  <tr>\\n    <td><code>application_fee_rate_id_required</code></td>\\n    <td>Missing required parameter: application_fee_rate_id</td>\\n  </tr>\\n  <tr>\\n    <td><code>application_fee_required</code></td>\\n    <td>Missing required parameter: application_fee</td>\\n  </tr>\\n  <tr>\\n    <td><code>brand_required</code></td>\\n    <td>Missing required parameter: brand</td>\\n  </tr>\\n  <tr>\\n    <td><code>capture_strategy_invalid</code></td>\\n    <td>Format is invalid for parameter: capture_strategy</td>\\n  </tr>\\n  <tr>\\n    <td><code>card_decline_rate_limit_exceeded</code></td>\\n    <td>This card has been declined too many times. You can try to charge this card again after 24 hours. We suggest reaching out to your customer to make sure they have entered all of their information correctly and that there are no issues with their card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>card_declined</code></td>\\n    <td>The card has been declined. When a card is declined, the error returned also includes the decline_code attribute with the reason why the card was declined.</td>\\n  </tr>\\n  <tr>\\n    <td><code>card_name_required</code></td>\\n    <td>Missing required parameter: card_name</td>\\n  </tr>\\n  <tr>\\n    <td><code>card_number_invalid</code></td>\\n    <td>Format is invalid for parameter: card_number</td>\\n  </tr>\\n  <tr>\\n    <td><code>card_number_required</code></td>\\n    <td>Missing required parameter: card_number</td>\\n  </tr>\\n  <tr>\\n    <td><code>charge_expired_for_capture</code></td>\\n    <td>The charge cannot be captured as the authorization has expired. Auth and capture charges must be captured within 7 days.</td>\\n  </tr>\\n  <tr>\\n    <td><code>country_invalid</code></td>\\n    <td>Format is invalid for parameter: country</td>\\n  </tr>\\n  <tr>\\n    <td><code>currency_invalid</code></td>\\n    <td>Format is invalid for parameter: currency</td>\\n  </tr>\\n  <tr>\\n    <td><code>currency_required</code></td>\\n    <td>Missing required parameter: currency</td>\\n  </tr>\\n  <tr>\\n    <td><code>customer_id_required</code></td>\\n    <td>Missing required parameter: customer_id</td>\\n  </tr>\\n  <tr>\\n    <td><code>customer_max_payment_methods</code></td>\\n    <td>The maximum number of PaymentMethods for this Customer has been reached. Either detach some PaymentMethods from this Customer or proceed with a different Customer.</td>\\n  </tr>\\n  <tr>\\n    <td><code>email_invalid</code></td>\\n    <td>The email address is invalid (e.g., not properly formatted). Check that the email address is properly formatted and only includes allowed characters.</td>\\n  </tr>\\n  <tr>\\n    <td><code>email_required</code></td>\\n    <td>Missing required parameter: email</td>\\n  </tr>\\n  <tr>\\n    <td><code>expired_card</code></td>\\n    <td>The card has expired. Check the expiration date or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_account_id_required</code></td>\\n    <td>Missing required parameter: gateway_account_id</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_authentication_error</code></td>\\n    <td>The payment network returned an authentication error</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_error</code></td>\\n    <td>There was an issue processing your payment with the gateway. Please try again later.</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_idempotency_error</code></td>\\n    <td>The gateway detected concurrent requests using this idempotency key</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_rate_limit_error</code></td>\\n    <td>Too many requests hit the API too quickly. We recommend an exponential back-off of your requests.</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_ref_id_required</code></td>\\n    <td>Missing required parameter: gateway_ref_id</td>\\n  </tr>\\n  <tr>\\n    <td><code>gateway_timeout_error</code></td>\\n    <td>There was a timeout with the gateway, we recommend retrying using the Should-Retry header</td>\\n  </tr>\\n  <tr>\\n    <td><code>idempotency_concurrent_request</code></td>\\n    <td>We detected concurrent requests using this idempotency key</td>\\n  </tr>\\n  <tr>\\n    <td><code>idempotency_key_required</code></td>\\n    <td>Idempotency-Key is a required header</td>\\n  </tr>\\n  <tr>\\n    <td><code>idempotency_params_mismatch</code></td>\\n    <td>The request parameters do not match those of a previous request using this idempotency key</td>\\n  </tr>\\n  <tr>\\n    <td><code>idempotency_request_in_progress</code></td>\\n    <td>Another request using this idempotency key is currently in progress</td>\\n  </tr>\\n  <tr>\\n    <td><code>internal_server_error</code></td>\\n    <td>An unexpected error has occurred. JustiFi engineers will investigate the error and contact you if any remediation steps are necessary.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_address</code></td>\\n    <td>The card\u2019s address is incorrect. Check the card\u2019s address or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_card_number</code></td>\\n    <td>The card number is incorrect. Check the card number or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_characters</code></td>\\n    <td>This value provided to the field contains characters that are unsupported by the field</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_charge_amount</code></td>\\n    <td>The specified amount is invalid. The charge amount must be a positive integer in the smallest currency unit, and not exceed the minimum or maximum amount.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_cvc</code></td>\\n    <td>The card\u2019s security code is incorrect. Check the card\u2019s security code or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_expiry_month</code></td>\\n    <td>The card\u2019s expiration month is incorrect. Check the expiration date or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_expiry_year</code></td>\\n    <td>The card\u2019s expiration year is incorrect. Check the expiration date or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>invalid_zip_code</code></td>\\n    <td>The card\u2019s postal code is incorrect. Check the card\u2019s postal code or use a different card.</td>\\n  </tr>\\n  <tr>\\n    <td><code>month_invalid</code></td>\\n    <td>Format is invalid for parameter: month</td>\\n  </tr>\\n  <tr>\\n    <td><code>not_authenticated</code></td>\\n    <td>Not authenticated</td>\\n  </tr>\\n  <tr>\\n    <td><code>not_authorized</code></td>\\n    <td>Not authorized</td>\\n  </tr>\\n  <tr>\\n    <td><code>parameter_missing</code></td>\\n    <td>Missing required parameter</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_fully_refunded</code></td>\\n    <td>The refund cannot be processed because the associated payment is fully refunded</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_intent_cannot_be_captured</code></td>\\n    <td>Payment Intent status is \'%{status}\' so it cannot be captured</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_intent_not_found</code></td>\\n    <td>Payment intent not found</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_intent_unexpected_state</code></td>\\n    <td>You cannot provide a new payment method to a PaymentIntent when it has a status of requires_capture, canceled, or succeeded</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_method_not_found</code></td>\\n    <td>Payment method not found</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_method_required</code></td>\\n    <td>Missing required parameter: payment_method</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_method_token_required</code></td>\\n    <td>Missing required parameter: payment_method_token</td>\\n  </tr>\\n  <tr>\\n    <td><code>payment_outside_refund_window</code></td>\\n    <td>The refund cannot be processed because the associated payment is outside the refund window</td>\\n  </tr>\\n  <tr>\\n    <td><code>postal_code_invalid</code></td>\\n    <td>Format is invalid for parameter: postal_code</td>\\n  </tr>\\n  <tr>\\n    <td><code>refund_error</code></td>\\n    <td>An error occurred during refunding your payment, JustiFi engineers have been alerted and are working on a solution</td>\\n  </tr>\\n  <tr>\\n    <td><code>refund_exceeds_amount_available</code></td>\\n    <td>The refund cannot be processed because the refund amount exceeds the available funds</td>\\n  </tr>\\n  <tr>\\n    <td><code>refund_exceeds_payment_amount</code></td>\\n    <td>The refund cannot be processed because the refund amount exceeds the associated payment amount</td>\\n  </tr>\\n  <tr>\\n    <td><code>refund_reason_invalid</code></td>\\n    <td>Refund reason must be one of the following: %{Refund::REASONS}</td>\\n  </tr>\\n  <tr>\\n    <td><code>resource_not_found</code></td>\\n    <td>Resource not found</td>\\n  </tr>\\n  <tr>\\n    <td><code>state_invalid</code></td>\\n    <td>Format is invalid for parameter: state</td>\\n  </tr>\\n  <tr>\\n    <td><code>token_already_used</code></td>\\n    <td>The token provided has already been used. You must create a new token before you can retry this request.</td>\\n  </tr>\\n  <tr>\\n    <td><code>token_in_use</code></td>\\n    <td>The token provided is currently being used in another request. This occurs if your integration is making duplicate requests simultaneously.</td>\\n  </tr>\\n  <tr>\\n    <td><code>transfer_required</code></td>\\n    <td>Missing required parameter: transfer</td>\\n  </tr>\\n  <tr>\\n    <td><code>unexpected_parameter</code></td>\\n    <td>Unexpected parameter for this request</td>\\n  </tr>\\n  <tr>\\n    <td><code>verification_invalid</code></td>\\n    <td>Format is invalid for parameter: verification</td>\\n  </tr>\\n  <tr>\\n    <td><code>year_invalid</code></td>\\n    <td>Format is invalid for parameter: year</td>\\n  </tr>\\n</table>\\n","version":"v1","title":"JustiFi API Documentation","termsOfService":"https://justifi.tech/terms-and-conditions","x-logo":{"url":"https://justifi-brand-assets.s3.us-east-2.amazonaws.com/justifi-light-bg.png"},"contact":{"email":"api-development@justifi.ai"}},"tags":[{"name":"Testing","description":"<h2>Overview</h2>\\nTo facilitate seamless testing of your integration with JustiFi\'s API, we provide a set of standardized\\ntesting card numbers. These cards simulate various transaction scenarios, enabling you to ensure that\\nyour implementation handles different payment outcomes correctly. Use these test cards in our sandbox\\nenvironment to validate your payment workflows.\\n\\n<h2>Successful Test Cards</h2>\\nThis section lists the card details you can use to simulate successful transactions. These cards will\\nmimic a successful payment process, allowing you to test the positive flow of your payment system.\\n\\n| PAN | Brand | CVC | Date |\\n|---- |-----  |---  |----- |\\n|`4242424242424242`| Visa                  | Any 3 | Any Future Date |\\n|`4000056655665556`| Visa (Debit)          | Any 3 | Any Future Date |\\n|`5555555555554444`| Mastercard            | Any 3 | Any Future Date |\\n|`2223003122003222`| Mastercard (2-Series) | Any 3 | Any Future Date |\\n|`5200828282828210`| Mastercard (Debit)    | Any 3 | Any Future Date |\\n|`5105105105105100`| Mastercard ( Prepaid) | Any 3 | Any Future Date |\\n|`378282246310005` | American Express      | Any 4 | Any Future Date |\\n|`371449635398431` | American Express      | Any 4 | Any Future Date |\\n|`6011000990139424`| Discover              | Any 3 | Any Future Date |\\n|`3056930009020004`| Discover              | Any 3 | Any Future Date |\\n|`36227206271667`  | Diners Club (14 Digit)| Any 3 | Any Future Date |\\n|`3566002020360505`| JCB                   | Any 3 | Any Future Date |\\n|`6200000000000005`| Union Pay             | Any 3 | Any Future Date |\\n\\n<h2>Declined Transaction Cards</h2>\\nHere you\'ll find card details that simulate declined transactions. Use these to verify how your system\\nresponds to various failure scenarios, such as insufficient funds or incorrect card details.\\n\\n| PAN | Error Description |\\n|---- |------------------ |\\n|`4000000000000101`| Payment is declined for CVC (If CVC is Privded)                    |\\n|`4000000000000341`| Tokenizing this card succeeds, but attempts to make a payment fail |\\n|`4000000000000002`| Payment is declined card_declined code                             |\\n|`4000000000009995`| Payment is declined Insufficient Funds                             |\\n|`4000000000009987`| Payment is declined lost_card                                      |\\n|`4000000000009979`| Payment is declined stolen_card                                    |\\n|`4000000000000069`| Payment is declined expired_card code                              |\\n|`4000000000000127`| Payment is declined invalid_cvc cod                                |\\n|`4000000000000119`| Payment is declined gateway_error code                             |\\n|`4242424242424241`| Payment is declined for card number invalid                        |\\n"},{"name":"Payments","description":"To charge a payment method the desired amount, you\'ll use a payment.\\nYou can choose whether to charge a payment method that\'s already been\\ntokenized or tokenize a new one when you create the payment.\\nIf a payment fails, the status will reflect it and an error code will be returned.\\nYou can retrieve information about your payments and refund them if needed.\\n"},{"name":"Payment Intents","description":"If you\'d like to track the payment method and all associated payment attempts\\nfor a particular payment, you can use payment intents.\\nOnce you\'ve tokenized a payment method and attached it to a payment intent,\\ncapturing the payment intent will let JustiFi know to charge the payment method and create a payment.\\nIf the capture fails, you can attempt again on the same payment intent.\\n\\n*Note: Payment Intents do NOT support dynamic fees. A platform may set a custom application fee amount that applies to a payment using [Create a Payment](/tag/Payments#operation/CreatePayment) directly.*\\n"},{"name":"Payment Methods","description":"Payment methods refer to the specific form of payment each customer uses\\n(e.g. their credit card). Payment methods are tokenized, then charged at time of payment.\\n"},{"name":"Refunds","description":"When you refund a payment, a refund object is created. You can retrieve\\ninformation about the refunds you\'ve issued.\\n"},{"name":"Disputes","description":"A customer may dispute their payment with the card issuer/bank if they believe\\nthe charge is erroneous. When this happens, a dispute record is created and\\nassociated with their original payment.\\n"},{"name":"Payouts","description":"Each day, a payout containing that day\'s funds is automatically created for the\\npurpose of distributing those funds to the active bank account. Payout amounts are calculated by\\nsumming the associated balance transactions for that specific day.\\n"},{"name":"Balance Transactions","description":"Balance transactions are the reflection of any movement of funds that affects the balance of an account.\\nOftentimes, a single financial transaction (like a payment) will result in the creation of many balance\\ntransactions in order to document the flow of funds between multiple accounts. Other financial transactions\\nthat result in balance transactions include refunds, disputes, and payouts.\\n"},{"name":"Ach Return Fees","description":"ACH return fees are fees charged by financial institutions when an ACH (Automated Clearing House) transaction\\nis returned due to insufficient funds or other reasons.\\nIf an ACH transaction is returned for any reason, the financial institution may charge a fee to the sender of the transaction.\\nThese fees can vary depending on the policies of the financial institution and the reason for the return.\\n"},{"name":"Sub Accounts","description":"Sub Accounts are the representation of your platform\'s customers in JustiFi. Payments are processed through sub accounts, each of which is associated with your platform account. To gain approval for payment processing, each sub account must submit the required onboarding information. You may send this to us through either our hosted onboarding or the API, and you\'ll be able to monitor each sub account\'s onboarding status along the way.\\n\\n| Status             | Description |\\n| -----------        | ----------- |\\n| created            | this sub account has been created (via Sub Accounts API), but we haven\'t received their onboarding entry yet |\\n| submitted          | we\'ve received this sub account\'s onboarding entry (via hosted onboarding or API) and we\'re reviewing their information |\\n| information_needed | we reviewed this sub account\'s onboarding entry and found an issue; we need more information before we can enable this account |\\n| enabled            | this sub account is approved to process payments _note: test accounts are automatically enabled_ |\\n| rejected           | this sub account didn\'t pass approval, so they won\'t be able to process payments |\\n| disabled           | this sub account was previously approved, but has since become ineligible to process payments (e.g. due to fraud) |\\n| archived           | this sub account has been archived; they won\'t be able to process payments (but their record will remain for historical reasons) |\\n"},{"name":"Hosted Onboarding","x-traitTag":true,"description":"In order to process payments, each of your customers (whom we refer to as `sub accounts`) will go through an approval process. JustiFi\'s hosted onboarding provides you with an easy-to-implement, user-friendly way to collect the required business and financial information from each sub accounts within your platform. Once approved, your sub account can process payments through JustiFi.\\n\\nTo onboard a new sub account via hosted onboarding\\n1. Create a sub account\\n2. Include JustiFi hosted onboarding in your application\\n3. (optional) Listen to success/fail message\\n4. Check the sub account\'s status\\n\\n\\n### Create a sub account\\n<PullRight>\\n\\n#### Create a sub account\\n```sh\\ncurl -X POST \\\\\\n  https://api.justifi.ai/v1/sub_accounts \\\\\\n  -H \'Authorization: Bearer {access_token}\' \\\\\\n  -H \'Content-Type: application/json\' \\\\\\n  -d \'{\\n    \\"name\\": \\"Sub account name\\"\\n  }\'\\n</PullRight>\\nUse the sub accounts API to [create a sub account](/tag/Sub-Accounts#operation/CreateSubAccount) on JustiFi that is associated with your platform. You will need the `account_id` from the account you create for the next step.\\n\\n\\n### Include JustiFi hosted onboarding in your application\\nTo present the JustiFi hosted onboarding form to your user, create an iframe with a source of `https://accounts.justifi.ai/onboarding/SUB_ACCOUNT_ID`, where `SUB_ACCOUNT_ID` is the `account_id` that was created in the previous step. This iframe will present your user with a multi-step form where they can enter the business and financial information needed for approval. Upon submission, a success message will display.\\n\\n### (optional) Listen to success/fail message\\n<PullRight>\\n#### Listen to success/fail message\\n```js\\nconst handleOnboardingCompletion = (e) => {\\n  const { eventType } = e.data;\\n  if (eventType === \'submitSuccess\') {\\n    // Handle successful onboarding\\n  }\\n  if (eventType === \'submitFailure\') {\\n    // Handle failed onboarding\\n  }\\n};\\n\\nwindow.addEventListener(\'message\', handleOnboardingCompletion);\\n```\\n</PullRight>\\nWhen the onboarding is completed, success or failure, the JustiFi iframe will send a postMessage. This allows your platform to take a next step, for example closing a modal, or redirecting to another page.\\n\\n### Check the sub account status\\n<PullRight>\\n\\n#### Retrieve a sub account\\n```sh\\ncurl -X GET https://api.justifi.ai/v1/sub_accounts/ACCOUNT_ID \\\\\\n    -H \'Authorization: Bearer [access_token]\' \\\\\\n    -H \'Accept: application/json\'\\n```\\n</PullRight>\\nOnce your sub account submits the onboarding form, we\'ll review their information. This approval process can take up to a few business days. In order to check the account\'s onboarding status, call the [Get a Sub Account endpoint](/tag/Sub-Accounts#operation/GetSubAccount) or use an event publisher to subscribe to the `sub_account.updated` events\\n"},{"name":"Onboarding via API","description":"In order to process payments, each of your customers (whom we refer to as `sub accounts`) will go through an approval process. JustiFi\'s onboarding API allows you to utilize your own onboarding frontend to collect the required business and financial information from each of your sub accounts. Once approved, your sub account can process payments through JustiFi.\\n\\nTo onboard a new sub account via the API\\n1. Create a sub account\\n2. Create an onboarding entry\\n3. Check the sub account\'s status\\n\\n\\n### Create a sub account\\n<PullRight>\\n\\n#### Create a sub account\\n```sh\\ncurl -X POST \\\\\\n  https://api.justifi.ai/v1/sub_accounts \\\\\\n  -H \'Authorization: Bearer {access_token}\' \\\\\\n  -H \'Content-Type: application/json\' \\\\\\n  -d \'{\\n    \\"name\\": \\"Sub account name\\"\\n  }\'\\n```\\n</PullRight>\\nUse the sub accounts API to [create a sub account](/tag/Sub-Accounts#operation/CreateSubAccount) on JustiFi that is associated with your platform. You will need the `account_id` from the sub account you create for the next step.\\n\\n\\n### Create an onboarding entry\\nUse the onboarding API to [create an onboarding entry](#operation/CreateOnboardingEntry) containing the required information for the sub account you made.\\n\\n\\n### Check the sub account status\\n<PullRight>\\n\\n#### Retrieve a sub account\\n```sh\\ncurl -X GET https://api.justifi.ai/v1/sub_accounts/ACCOUNT_ID \\\\\\n    -H \'Authorization: Bearer [access_token]\' \\\\\\n    -H \'Accept: application/json\'\\n```\\n</PullRight>\\nOnce you create the account\'s onboarding entry, we\'ll review their information. This approval process can take up to a few business days. In order to check the account\'s onboarding status, call the [Get a Sub Account endpoint](/tag/Sub-Accounts#operation/GetSubAccount) or use an event publisher to subscribe to the `sub_account.updated` events.\\n"},{"name":"Proceeds","description":"Proceeds represent your platform\'s take-home portion of the fees from your sub account\'s financial transactions.\\nProceeds are batched together according to the payout schedule configured on your account, then transferred\\nto your active bank account.\\n"},{"name":"EventBridge (AWS) Delivery","x-traitTag":true,"description":"Integrate your app with Amazon EventBridge (https://aws.amazon.com/eventbridge) to manage large volumes of\\nevent notifications and receive JustiFi events using an event bus.\\n\\nEventBridge lets you process events at the rate that works for your tech stack without getting\\noverwhelmed. It is highly scalable and resilient, and lets you accept more webhook traffic while\\nreducing your infrastructure cost and complexity.\\n\\n**When you\'re ready to get started:**\\n\\n- Go to EventBridge in your AWS Console\\n- Create an Event Bus to allow events from another account\\n- Add the specified policy as a resource-policy to the event bus\\n```\\n{\\n  \\"Version\\": \\"2012-10-17\\",\\n  \\"Statement\\": [{\\n    \\"Sid\\": \\"allow_justifi_account_to_put_events\\",\\n    \\"Effect\\": \\"Allow\\",\\n    \\"Principal\\": {\\n      \\"AWS\\": \\"arn:aws:iam::<justifi-account-id>:root\\"\\n    },\\n    \\"Action\\": \\"events:PutEvents\\",\\n    \\"Resource\\": \\"arn:aws:events:<aws-region>:<aws-account-id>:event-bus/<aws-event-bus-name>\\"\\n  }]\\n}\\n```\\n\\n*Contact JustiFi to get our AWS account id*\\n\\n\\nEventBridge allows events to be sent to multiple targets.\\nThe following example will send those events to a Cloudwatch Log Group\\n\\n- Go to CloudWatch in your AWS Console\\n- Create a Log Group\\n\\n\\nBack on EventBridge:\\n- Create an Event Rule to receive JustiFi Events inside previously created event bus\\n- Add the following event pattern\\n```\\n{\\n  \\"source\\": [\\"justifi.events\\"]\\n}\\n```\\n- Add CloudWatch Log Group as a target\\n- You can either type the log group name or select it in the list\\n\\nIn the Developer Tools section of the JustiFi app:\\n- Add an event publisher with EventBridge delivery method and enter the ARN for your event bus (you\u2019ll also choose which event types will publish). We recommend starting with a test account.\\n- Test the publisher by prompting one of the event types you chose and making sure you receive the published event\\n"},{"name":"Webhook Delivery","x-traitTag":true,"description":"In addition to direct EventBridge publishing, we offer event delivery to your app via webhooks.\\nWebhooks are a reliable method to subscribe to our published events via an API endpoint.\\n\\nWebhooks are secured by signature verification, which you will need to verify by generating a SHA-256 hex using the following information:\\n\\n| Parameter  | Header            | Value                                                           |\\n|------------|-------------------|-----------------------------------------------------------------|\\n| Timestamp  | JUSTIFI-TIMESTAMP | ISO string format                                               |\\n| Signature  | JUSTIFI-SIGNATURE | String                                                          |\\n| Algorithm  | ----------------- | SHA-256                                                         |\\n| Secret Key | ----------------- | Found in your event publisher\'s page                            |\\n| Message    | ----------------- | String in the format `<timestamp_header>.<received_event_json>` |\\n\\nTo verify the signature simply compare the generated SHA-256 hex against it; if it is successful the webhook signature is valid.\\n\\nHere is a code example for reference:\\n```ruby\\ndef webhook_signature_valid?(signature, received_event, timestamp, secret_key)\\n  timestamp_payload = \\"#{timestamp}.#{received_event.to_json}\\"\\n  algorithm = OpenSSL::Digest.new(\\"sha256\\")\\n  hex = OpenSSL::HMAC.hexdigest(algorithm, secret_key, timestamp_payload)\\n\\n  signature == hex\\nend\\n```\\n\\nIf you are using any of our SDKs, we provide a convenient method for validating the signature.\\n\\nAfter validating, you must respond with a `200 OK` with in **5 seconds**. In the event of a non-200 response or a delay of more than 5 seconds, delivery will be\\nattempted again. For live accounts, webhooks are retried 10 times over 24 hours.\\nFor test accounts, webhooks are retried 3 times over 1 hour.\\n\\n**When you\'re ready to get started:**\\n\\n- Create the endpoint on your server that will receive published events\\n- Add an event publisher with webhook delivery method in the Developer Tools section of the app (you\u2019ll subscribe your endpoint to the event types of your choice). We recommend starting with a test account.\\n- Test the publisher by prompting one of the event types you chose and making sure your subscribed endpoint receives the published event\\n"},{"name":"JustiFi Web Components","description":"JustiFi Web Components offer an expanding collection of components that can be used in virtually any application,\\nno matter the tech stack. They can be installed using NPM, or included via CDN using a script tag. To learn more,\\nsee the documentation in [our public GitHub repositiory](https://github.com/justifi-tech/web-component-library#documentation).\\n"},{"name":"Hosted Checkout","description":"JustiFi provides a hosted checkout solution which allows you to collect a payment via a checkout form which we host. This solution provides less customization compared to using our PaymentsJS / Payment Web Components, however it requires less frontend integration work on your platform.\\n\\nTo collect a payment via hosted checkout, you must first ensure you ask the JustiFi team to enable the hosted checkout feature for your platform. We will also configure the branding for the checkout at this time.\\n\\nOnce you have configured hosted checkout, you must complete the following steps to complete a payment:\\n\\n1. Create a Payment Intent\\n2. Create a Checkout Session\\n3. Redirect to our hosted checkout\\n4. Handle successful payment redirect\\n5. OR handle redirect back from checkout (optional)\\n6. Handle payment_intent.succeeded event (optional)\\n\\n### Create a payment intent\\n[Create a Payment Intent](/tag/Payment-Intents#operation/CreatePaymentIntent) with the amount you\'d like to capture, and a description of the payment.\\n\\n### Create a checkout session\\n[Create a checkout session](/tag/Checkout-Sessions#operation/CreateCheckoutSession) which will be used to redirect your customer to the JustiFi checkout page. This in includes the payment intent, a url to redirect for a back/cancel action, and a url for redirect after completing the payment. At this point You have 24 hours to complete the checkout.\\n\\n### Redirect to our hosted checkout\\nUsing the checkout session id returned from the previous step, redirect to **https://checkout.justifi.ai/r/{checkout_session_id}**, this will redirect your customer our checkout form with your branding.\\n\\n### Handle AFTER payment redirect\\nIf the checkout is completed, we will redirect to the after payment url provided when the checkout session was created. Please note, it is possible the payment may not be in a pending, or failed status, so please interrogate the payment via API.\\n\\n### OR handle redirect back from checkout\\nIf a customer decides not to pay, we have a back button on the checkout form. If you provide a back_url, we will redirect the customer back to that url.\\n\\n### (Optional) handle payment_intent.succeeded event\\nIn addition to the after payment redirect, we recommend creating an [Event Publisher](/tag/Events) which publishes [`payment_intent.succeeded` events](/tag/Events#operation/paymentIntentEvent). This will provide a secondary means to ensure the payment was successful if there are network issues with the redirect.\\n"},{"name":"JustiFi SDK","description":"We offer support for using our API via a Ruby SDK and a Node SDK. The projects are\\nopen source and available on Github. You can view full documentation on usage there.\\nAs more languages are supported, they will be added to this list:\\n\\n- [JustiFi Ruby SDK](https://github.com/justifi-tech/justifi-ruby)\\n- [JustiFi Node SDK](https://github.com/justifi-tech/justifi-node)\\n- [JustiFi Mobile SDK](https://github.com/justifi-tech/justifi-react-native-sdk)\\n"},{"name":"Events","description":"Our event publishing system allows you to subscribe to certain events on the JustiFi platform.\\nOnce subscribed, your application will be notified anytime those events occur, so you can react\\naccordingly in real time. We support two event-delivery mechanisms; you can receive them via\\nwebhooks or directly to an AWS Eventbridge event bus.\\n\\nWe will publish the following events:\\n\\n- payment.created\\n- payment.succeeded\\n- payment.failed\\n- payment.pending\\n- payment.authorized\\n- payment.captured\\n- payment.canceled\\n- payment.refunded\\n- payment.refund.updated\\n- payment.dispute.created\\n- payment.dispute.closed\\n- payment_method.created\\n- payment_method.updated\\n- payment_method.bin_mapped\\n- payment_intent.attached\\n- payment_intent.created\\n- payment_intent.requires_capture\\n- payment_intent.succeeded\\n- payout.created\\n- payout.paid\\n- payout.failed\\n- proceeds.payout.created\\n- sub_account.updated\\n- application_fee_rate.created\\n- application_fee_rate.updated\\n- entity.business.created\\n- entity.business.updated\\n- entity.identity.created\\n- entity.identity.updated\\n- entity.address.created\\n- entity.address.updated\\n- entity.document.created\\n- entity.document.uploaded\\n- entity.bank_account.created\\n"},{"name":"Business","description":"Creating a business entity is an essential step in integrating your business operations with JustiFi. It is also necessary to comply with local laws and regulations governing your operations. To create a new business entity, you will need to provide basic information such as the business name, website, business type, business structure, and your industry. You may also add details like the legal address, tax ID, and ownership structure. Providing detailed and accurate information about the business entity is essential for ensuring legal compliance, financial accuracy, and it can also help avoid potential legal and financial issues.\\n"},{"name":"Identity","description":"Creating an identity establishes a unique identification for people associated with your business. Accurately providing your information is crucial in ensuring that your identity is properly verified and maintained, and can have important consequences for a variety of financial and legal transactions. Our platform has a secure database for storing identity information, encryption and other security measures to protect your sensitive data.\\n"},{"name":"Address","description":"Creating an Address entity provides the necessary information to identify and locate a physical address. It may be associated with an Identity entity or Business entity to provide a more complete picture of the parties involved.\\n"},{"name":"Document","description":"Create/manage documents attached to your businesses and identities. When a document record\\nis created using this API the response object returns a presigned url used to upload this\\ndocument to an encrypted bucket. The presigned url can then be used to upload directly to an\\nAWS s3 bucket, with a command like `curl -X PUT -T /path/to/file.pdf \\"insert presigned url\\"`.\\nYou must use the PUT method. This can also be accomplished from a backend or mobile app, from the browser or using our web components.\\nAfter upload is complete the status changes from `pending` to `uploaded`.\\n"},{"name":"Bank Account","description":"Create/manage bank accounts for your businesses. These accounts are used for paying out earnings for usage of various products, for example card processing.\\n"},{"name":"Terms and Conditions","description":"Legally binding rules and agreements that outline the rights, responsibilities, and limitations governing the use of the platform.\\n"},{"name":"Provisioning","description":"Provisioning API for Products serves as an automated interface to configure resources based on your current entities informations, for example creating an account for card processing.\\n"},{"name":"Payment Method Migration","description":"## Data Import\\nJustiFi enables you to transfer your existing customer data and payment methods.  Please contact our [Customer Success Department](mailto:customer_success@justifi.tech) to begin work with your existing processor to securely transfer your information.\\n\\n### PGP Encryption\\nMany processors utilize PGP to encrypt sensative data.  You can find useful information about PGP by looking over the [GPG](http://gnupg.org/) documentation.\\nOnce you understand the basics, you will want to [import a public key](http://www.gnupg.org/gph/en/manual.html#AEN84).  Please contact our [Customer Success Department](mailto:customer_success@justifi.tech) if you have any questions.\\n\\n#### JusitiFi\'s PGP migration key\\n\\n|  |  |\\n|--|--|\\n|**Key ID** |`A4546473910D638E`|\\n|**User ID**|`JustiFi Import Key (PCI) support-migrations@justifi.tech`|\\n|**Fingerprint**|`0E7C 2E45 F62D 98D7 F7B8 776B A454 6473 910D 638E`|\\n|**Key Type**|`RSA`|\\n|**Key Size**|4096|\\n\\n\\n##### Public Key\\n```bash\\n-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\nmQINBGS+8MwBEACibKFR3bZb4huE7piU0fX3zbLpIq+Jnvs79v5ywVMYvu1kgzbb\\nXcA0Td2IO0PXuG/cgH4JxH1qVG+cSGjSQ0rOpoQWG5hwOrvRVH17SUQMkZxgDwQb\\npCo1N44L+Ij23wW3JlyVb/FbVTK6uctjPmOoonFtzMG2ObKyeTqc1yWFqaIypjvG\\nAUG2SzgLVqTTLIE5AySyOIpHTnQUwky4J/yCaWhcEJcsQ9GFHx/e+gAlReydMxfa\\nWhTlMf9Cjm/WaOKVVKrTVicOtfVsFSWmxgtVMK5Smo0YGyF57Oz36Axy63g3QyYs\\n6XhWiuqCYpnH9EYHNDZaD6G1tZMyczon/rQNtCemUJeM96eyoVi8zK9wCDQT0fQ3\\n06JqqQtJqI3pAdzQ/VNYwm57XzZPXpFQ7ZGW+0JWb0UfGiwHgnOd/NHsy8imMQiK\\nFLQjsFnDKVpRgXjqiRUX2/2Qs22XKprKmr6ptNweFLwU1dW0qBkmeM2GBaq7hAdq\\nKx6zoPwhYMe7ZxzKO2brvBcxMexhIBYAgdZR3AIdqLWnkGBHY4A3rXYAXqBOiryA\\nSFK9r6VKr8CihdF4sasdf0uALEOiSYzcXarc5k1rlPxD9ldXduv+RdoodoHVW//+\\nID+kvQQSwVOMSF8In+9j+Hhu2Ma3BLDRAqz/Vip9vB9frUn/YyqxjoZQxQARAQAB\\ntDpKdXN0aUZpIEltcG9ydCBLZXkgKFBDSSkgPHN1cHBvcnQtbWlncmF0aW9uc0Bq\\ndXN0aWZpLnRlY2g+iQJXBBMBCABBFiEEDnwuRfYtmNf3uHdrpFRkc5ENY44FAmS+\\n8MwCGwMFCQPCZwAFCwkIBwICIgIGFQoJCAsCBBYCAwECHgcCF4AACgkQpFRkc5EN\\nY44txBAAk89sEzllrgo2f2EJ8esYrZUeOE7Rn9jNdBvb87DO2S4In6XuWWS3SjvO\\naTR9aeJcwueJEZIYzz69k2PWr72CWhW7SQwkjz4on/PH6/jWK2+1en1J5NYVy3SR\\nkPrVpcasKYf07fG5DmaUiTla7/S2NxBu+kl5ZXNaaBghg/8TCDjL7J7AcJaYKuRm\\n71Tc83ISG+PfbiJ8G4FBq5sOoA6s+6MwBZOYlSCX13V4DvdM6wT6kaJWFnI1ny/w\\n4X67NBlW/bCXAdLO3nduAe9fGf9OYkB+/CVsqHHHr7Y/PUbQLqwkrHw29vZlenXG\\nwHi6NbKHahgYe0KvrTqIa3iOhEusu5+JrIN13PPnLs8tGQQBANjW4KrbYGwwZQGp\\n88jnzeT5BsMTEEHxCoFH4b7vkdap8KaveI6UswZk7LKV8lxF+nG6hBnHuiaGDTfD\\n6mH4UQiDTnz2AQt2F4TiKEHn2FwT6VZMWaH3Yljz7915YW805ZWaIn2G5ACZKnqd\\nvZ/1YarzyNiwwtkIBaWd6twaK5Gzo0uR7u19L/upobOQ2rZxm2czoAewf2sqef5g\\nxHezpfSiu7cpoSUAYbfJI1xMHyJgdOu1nBI8O94bt7iy2aUreIUUnq4uha/TnSdb\\nt0iyvPT+fVbvELzzMQdL5zQRqtl9R9w9byNfE8eQvnL5Z00BRze5Ag0EZL7wzAEQ\\nAMF7UzULBsQmK4LwiuwVOcrYnN0ORQ/AXqDt09cOksDON4UzPrZxvq0FTggi9mzj\\nU83onhtOv9mjoLYmgdaHUEhhzw167lmWbpwmD/w8PoLgmssrqUcnZH8nYsdYXpkR\\nZCTsd68nJdhBQLHjpnH9Ok6nB3ApiPaktIF1Z5Lu8pdPKQVSVHsEUOJ+qZM4cGXk\\nWsqZLhmjycXnoF5ezSrUik8KwJL13fVFT7NCKagZazcCP57dNMF+sN6VZQSsvCOC\\njGjErIGJ6jZ4Qwdd9XVgygxtT5AEj0UakLZJZJfvO9o1ssxQ0TqOQyIj4n/45fRQ\\nnNSWR03LubksurvduZxpaI1s8p5G3WH2mSVocV+AZV2vmcz/GAFLOS1Ik6EalRDh\\nDVfGy5o/0D+rURs1zpcCwn1C3bib+LES9S6rnahkhzfqn1J456CxXzVtaqKJrfYq\\nl2oYd7C18kbarzBLIlEsygWf3yJi/VnsE/2beV2fa7BtQwvdongq9w8IMPzNyXEU\\nI/7QycB6+YURvt51bhmulSDcFcy6zL1AphLcn/2HQcQs9CMTpwc6QxBuOevgd4Hx\\nzRIweYzwND+a8pEzIoHIsfpPkWNFOzGWTj5apE9IwbrQ4oVk+Yd7KrcbZHDLTmtd\\n/yfAQtgGeiO7ns6APdggzKhGMTuTsLPla9zrY1aLSVOLABEBAAGJAjwEGAEIACYW\\nIQQOfC5F9i2Y1/e4d2ukVGRzkQ1jjgUCZL7wzAIbDAUJA8JnAAAKCRCkVGRzkQ1j\\njntdD/933jRfHN10CEHcwHc6t/GKN3y00mQG0PejsVF4VM+W7cW4cfCg7l7Ro3Qu\\n8B1mTEP6EXdx8XOq+v+06XNvk4d3KFRnBDuhPLsKMfJOyDLQfoRavea/9eCsFAEk\\nKdG75n0MbKn1h5LuYmXJV/aErLO9StZMNax5/89JlqI7GgtGCfGDkUShDM42+xAK\\nJc/hAz0WBnhspYmSFgeewry/rt6b7iWXcxKl7KiZLvBxv5KtzdJWIp0SdwnbeHyH\\nBZaYjoXkBgJE0DcvEDkqPI2Hn60dOwgrknC0+tQHxhxHXlWbZKg5lWt9ZJYjNIf/\\nv6qoVOjkOc519BlJnfk2rL3SpJR5k+WTUj82xdd0LumskPC94vYdiNDsgYefD4tO\\nqoDX24kqeW5HL4jSGaqmgaUPEdlxDh1COQACpVGHqSru6QXZFkSmDKH2pSrmpub9\\nIOgEaUb1S5WYRuNQiQJS6PpGwIa9TOmyWVidTNwJbi6j2XIlkTHEXrg9VE83KTau\\nW8j94/ty8orLMuJevCI0ZO5DvlN+vP8SEy1nLwcVQYcc4kn9ywOLNJXy6jQXO8Vs\\nmypLFmqv+hH7cc9TE9X4sRwtYjLuvZG9lobV1M+DrMh2wVyuVEUOSWXuG7VDYA/o\\nsu058bXjAzQnJhMnXn4AWsQRuovUOfVckTfOlUJXhmAPf7pQaw==\\n=oyvP\\n-----END PGP PUBLIC KEY BLOCK-----\\n```\\n\\n\\n#### Importing and using our key\\n\\n1. Copy JustiFi\'s migration key into a new file named `public.key`\\n2. Run the GPG command to import the key.\\n```sh\\ngpg --import public.key\\n```\\n3. Encrypt your file using the newly imported key.  This will create an encrypted file named `import_file.json.gpg`.\\n```sh\\ngpg --encrypt --recipient A4546473910D638E import_file.json\\n```\\n\\n\\n"},{"name":"Terminals","description":"_**NOTE: This API is under active development and subject to change**_\\n\\nJustiFi provides a card present solution which allows you to collect a payment via a terminal provider by one of our technology partners.\\n\\nTo collect a payment via terminal, you must first ensure you ask the JustiFi team to enable the card present feature for your platform. Next, we will work to provision and configure terminals for your sub accounts.\\n\\nOnce you have configured a terminal, you must complete the following steps to complete a payment:\\n\\n1. Create a Payment Intent\\n2. Send a payment intent to a terminal\\n3. Terminal processes payment async\\n4. Handle payment_intent.succeeded event (recommended)\\n5. OR poll payment_intents API for status change (optional)\\n\\n### Create a payment intent\\n[Create a Payment Intent](/tag/Payment-Intents#operation/CreatePaymentIntent) with the amount you\'d like to capture, and a description of the payment.\\n\\n### Send a payment intent to a terminal\\n[POST to the terminal pay endpoint](/tag/Terminals##operation/payTerminal) which will be used to send a your payment intent to a terminal for processing. This process can take some time as it requires customer interaction. For this reason, the API will return immediately but the process is asynchronusly happening on a terminal.\\n\\n### Terminal processes payment async\\nAt this point, the process is handed over to the terminal to complete. Once the payment transaction is completed, we will publish an event for you to continue the process and take further action, as noted in the next step.\\n\\n### Handle payment_intent.succeeded event\\nCreate an [Event Publisher](/tag/Events) which publishes [`payment_intent.succeeded` events](/tag/Events#operation/paymentIntentEvent). This will provide a means to ensure the payment was successful. You can also listen to payment events, for example a payment.failed event will be published each time a payment intent is attempted to be processed but the transaction fails for some reason.\\n\\n### Poll payment_intents API for status change\\nIf you do not have the ability to handle event publishing, you could poll our payment intent API with the id of the payment intent you are processing. Contine to poll until the payment intent status attribute changes. We recommend using an event driven architecture."}],"x-tagGroups":[{"name":"Authorization","tags":["API Credentials"]},{"name":"For Platforms","tags":["Sub Accounts","Hosted Onboarding","Onboarding via API","Proceeds","Hosted Checkout"]},{"name":"Payment Resources","tags":["Testing","Payments","Payment Intents","Payment Methods","Refunds","Disputes","Payouts","Balance Transactions","Ach Return Fees","Checkout Sessions","Payment Method Migration"]},{"name":"Insurance Resources","tags":["Bind Insurance"]},{"name":"Entity Resources","tags":["Business","Identity","Address","Document","Bank Account","Terms and Conditions","Provisioning"]},{"name":"Card Present Resources","tags":["Terminals"]},{"name":"Libraries","tags":["JustiFi Web Components","JustiFi SDK"]},{"name":"Event Publishing","tags":["Events","EventBridge (AWS) Delivery","Webhook Delivery"]}],"paths":{"/sub_accounts":{"post":{"summary":"Create a Sub Account","description":"Create a JustiFi account for your customer, so they can process payments (once approved by JustiFi). The sub account will be created as part of your platform. If you use your test credentials, the sub account you create will have one account with the `account_type` of `test`. If you use your live credentials, the sub account you create will have two accounts -- one with the `account_type` of `test` and another with the `account_type` of `live`. This allows you to perform test operations on your real accounts by using their `test` account. When viewing the data payload for any sub account, you can reference the `related_accounts` attribute to get the `test_account_id` and `live_account_id` (if present) for that sub account.","operationId":"CreateSubAccount","tags":["Sub Accounts"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"name":{"type":"string","example":"Sub account name","description":"name for the sub account\\n*note: the name must be unique in your platform*\\n"}},"required":["name"]}}}},"responses":{"201":{"description":"Sub account was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"sub_account"},"data":{"$ref":"#/components/schemas/SubAccount"}}}]}}}}}},"get":{"summary":"List Sub Accounts","description":"List the sub accounts for your platform. This endpoint supports [pagination](/#section/Pagination).\\n*Note: By default, all sub accounts which are not archived will be returned. To list archived sub accounts, use the optional status parameter set to `archived`*\\n","operationId":"ListSubAccounts","tags":["Sub Accounts"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"in":"query","name":"status","schema":{"type":"string","enum":["created","submitted","information_needed","rejected","enabled","disabled","archived"]},"required":false,"example":"archived","description":"Return accounts with specific status\\n"}],"responses":{"200":{"description":"Successfully list sub accounts","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/SubAccount"}}}}]}}}}}}},"/sub_accounts/{id}":{"get":{"summary":"Get a Sub Account","description":"Get information about a sub account.","operationId":"GetSubAccount","tags":["Sub Accounts"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a sub account","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"sub_account"},"data":{"$ref":"#/components/schemas/SubAccount"}}}]}}}}}}},"/onboarding/{id}":{"post":{"summary":"Create an Onboarding Entry","description":"_<strong>Note: For onboarding version \\"v2.0\\", we have recently added more required fields, identification numnber (full ssn) for representative and owners, full address for owners, and date of incorporation and approx annual volume for businesses. We will still accept v1.0 payload, but these additional fields are required to enable a sub account.</strong>_\\n\\nFirst, you\'ll need to [create a sub account](/tag/Sub-Accounts#operation/CreateSubAccount) so you can use that sub account id in the path for this API.\\n\\nCreate an onboarding entry for a sub account, which will send their required onboarding information to the JustiFi team for review. This will change the sub account\'s status to `submitted`. Upon review, if we require additional verification in the form of an ID document (which is rare), we\'ll work with your sub account to obtain the documentation we need.\\n\\nDepending on each sub account\'s business type and structure, the onboarding information you\'ll need to collect will vary. Use the table below to check the requirements for each. You can also get a head start by copying the payloads from the request samples on the right; just choose the type of business you need from the dropdown first. _Note: The payload, response, and restrictions are all subject to change based on gateway requirements._\\n\\n<table>\\n  <thead>\\n    <tr>\\n      <th></td>\\n      <th></td>\\n      <th colspan=\\"8\\">For-Profit</th>\\n      <th colspan=\\"2\\">Non-Profit</th>\\n      <th colspan=\\"2\\">Government Entity</th>\\n    </tr>\\n    <tr>\\n      <th></td>\\n      <th>Individual</td>\\n      <th>Sole Proprietorship</th>\\n      <th>Single Member LLC</th>\\n      <th>Multi Member LLC</th>\\n      <th>Private Partnership</th>\\n      <th>Private Corporation</th>\\n      <th>Unincorporated Association</th>\\n      <th>Public Partnership</th>\\n      <th>Public Corporation</th>\\n      <th>Incorporated</th>\\n      <th>Unincorporated</th>\\n      <th>Governmental Unit</th>\\n      <th>Government Instrumentality</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td>business_details.url</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.type</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.structure</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.industry</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.date_of_incorporation</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.approximate_annual_volume</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.tax_id</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.phone</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.email</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.legal.name</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.legal.address* fields</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>business_details.doing_business_as.name</td>\\n      <td colspan=\\"13\\">Required for none</td>\\n    </tr>\\n    <tr>\\n      <td>representative.name</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>representative.identification_number</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>representative.title</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>representative.email</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>representative.phone</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>representative.ssn_last4</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>representative.is_owner</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>representative.dob* fields</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n    </tr>\\n    <tr>\\n      <td>representative.address* fields</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>owners[].name</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>owners[].identification_number</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>owners[].dob* fields</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>owners[].address* fields</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>&#9989;</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n      <td>-</td>\\n    </tr>\\n    <tr>\\n      <td>bank_account</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>terms_and_conditions.accepted</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>terms_and_conditions.ip</td>\\n      <td colspan=\\"13\\">Required for all</td>\\n    </tr>\\n    <tr>\\n      <td>terms_and_conditions.user_agent</td>\\n      <td colspan=\\"13\\">Required for none</td>\\n    </tr>\\n  </tbody>\\n</table>\\n","operationId":"CreateOnboardingEntry","tags":["Onboarding via API"],"parameters":[{"in":"path","name":"id","schema":{"type":"string","format":"uuid"},"required":true,"description":"sub account id for which this entry is being submitted"},{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OnboardingEntry"},"examples":{"Onboard_an_individual":{"value":{"business_details":{"url":"https://justifi.ai","type":"individual","industry":"Landscaping Services","mcc":"5261","approximate_annual_volume":"1000000","date_of_incorporation":"2000-01-01"},"representative":{"name":"Individual Personname","email":"just.an.individual@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US","phone":"6124011111","ssn_last4":"6789","is_owner":false},"bank_account":{"bank_name":"Wells Fargo","account_type":"checking","routing_number":"111111111","account_number":"111111112","account_nickname":"My payout account","account_owner_name":"Paper holder"},"terms_and_conditions":{"accepted":true,"ip":"127.0.0.1","user_agent":"Safari"}}},"Onboard_a_non-profit":{"value":{"business_details":{"url":"https://justifi.ai","type":"non_profit","structure":"incorporated","approximate_annual_volume":"1000000","date_of_incorporation":"2000-01-01","industry":"Youth Sports","mcc":"8398","tax_id":"12-3456789","phone":"6124011111","email":"just.sports@justifi.ai","legal":{"name":"Non-Profit Business Name","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"USA"},"doing_business_as":{"name":"Only needed if registered with DBA/Trade Name on SS-4 tax document"}},"representative":{"name":"Nonprofit Representative","title":"President","email":"just.sports.rep@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US","phone":"6124011111","ssn_last4":"6789","is_owner":false},"bank_account":{"bank_name":"Wells Fargo","account_type":"checking","routing_number":"111111111","account_number":"111111112","account_nickname":"My payout account","account_owner_name":"Paper holder"},"terms_and_conditions":{"accepted":true,"ip":"127.0.0.1","user_agent":"Firefox"}}},"Onboard_a_private_company_with_4_owners":{"value":{"business_details":{"url":"https://justifi.ai","type":"for_profit","structure":"multi_llc","approximate_annual_volume":"1000000","date_of_incorporation":"2000-01-01","industry":"Big Business","tax_id":"12-3456789","phone":"6124011111","email":"just.business@justifi.ai","legal":{"name":"For-Profit Business Name","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"USA"},"doing_business_as":{"name":"Only needed if registered with DBA/Trade Name on SS-4 tax document"}},"representative":{"name":"Business Representative","title":"Accountant","email":"just.business.rep@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US","phone":"6124011111","ssn_last4":"6789","is_owner":false},"owners":[{"name":"Owner Name1","email":"just.business.owner1@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US"},{"name":"Owner Name2","email":"just.business.owner2@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US"},{"name":"Owner Name3","email":"just.business.owner3@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US"},{"name":"Owner Name4","email":"just.business.owner4@justifi.ai","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US"}],"bank_account":{"bank_name":"Wells Fargo","account_type":"checking","routing_number":"111111111","account_number":"111111112","account_nickname":"My payout account","account_owner_name":"Paper holder"},"terms_and_conditions":{"accepted":true,"ip":"127.0.0.1","user_agent":"Microsoft Edge"}}},"Onboard_a_public_company_or_government_entity":{"value":{"business_details":{"url":"https://justifi.ai","type":"for_profit","structure":"public_corporation","approximate_annual_volume":"1000000","date_of_incorporation":"2000-01-01","industry":"Big Public Business","tax_id":"12-3456789","phone":"6124011111","email":"just.business.public@justifi.ai","legal":{"name":"Public Corp Business Name","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"USA"},"doing_business_as":{"name":"Only needed if registered with DBA/Trade Name on SS-4 tax document"}},"representative":{"name":"Account Rep","email":"just.business.rep@justifi.ai","title":"Financial Officer","identification_number":"000000000","dob_month":"01","dob_day":"01","dob_year":"1980","address_line1":"123 Example St","address_city":"Minneapolis","address_state":"MN","address_postal_code":"55555","address_country":"US"},"bank_account":{"bank_name":"Wells Fargo","account_type":"checking","routing_number":"111111111","account_number":"111111112","account_nickname":"My payout account","account_owner_name":"Paper holder"},"terms_and_conditions":{"accepted":true,"ip":"127.0.0.1","user_agent":"Safari"}}}}}}},"responses":{"200":{"description":"Onboarding entry was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"onboarding_entry"},"data":{"type":"object","properties":{"account_type":{"type":"string","description":"sub account type (live or test)"},"seller_account_id":{"type":"string","description":"seller account id (deprecated)"},"sub_account_id":{"type":"string","description":"sub account id"},"platform_account_id":{"type":"string","description":"account id for platform"},"payload":{"$ref":"#/components/schemas/OnboardingEntry"}}}}}]}}}}}}},"/platform/proceeds":{"get":{"summary":"List Proceeds","description":"List the proceeds payouts for your account. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListProceeds","tags":["Proceeds"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/created-before"},{"$ref":"#/components/parameters/created-after"},{"$ref":"#/components/parameters/deposits-before"},{"$ref":"#/components/parameters/deposits-after"}],"responses":{"200":{"description":"Successfully list proceeds","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/Proceed"}}}}]}}}}}}},"/platform/proceeds/{id}":{"get":{"summary":"Get a Proceeds Payout","description":"Get information about a proceeds payout.","operationId":"GetProceeds","tags":["Proceeds"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a proceeds payout","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"payout"},"data":{"items":{"$ref":"#/components/schemas/Proceed"}}}}]}}}}}}},"/payment_intents":{"post":{"summary":"Create a Payment Intent","description":"Create a payment intent if you\'d like a place to track the payment method along with all payment attempts for a payment.\\n\\n*Note: For platforms, if the sub account status is not `enabled`, `400` will be returned.*\\n","operationId":"CreatePaymentIntent","tags":["Payment Intents"],"parameters":[{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"amount":{"type":"number","example":10000,"description":"amount to charge in cents"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"description":{"type":"string","description":"your meaningful description of the payment intent (e.g. an order number or other value from your system)","example":"order_xyz"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment intent","example":{}}},"required":["amount","currency"]},"examples":{"Customer_intents_to_pay_10_USD":{"value":{"amount":1000,"currency":"usd","description":"ORDER 1235ABC: Charging $10 to the test card","metadata":{"order_number":"12345ABC"}}}}}}},"responses":{"201":{"description":"Payment intent was created successfully","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardPaymentIntent"},{"$ref":"#/components/schemas/BankAccountPaymentIntent"}]}}}}}},"get":{"summary":"List Payment Intents","description":"List the payment intents for your account. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListPaymentIntents","tags":["Payment Intents"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"}],"responses":{"200":{"description":"Successfully list payment intents","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":[{"$ref":"#/components/schemas/CardPaymentIntent"},{"$ref":"#/components/schemas/BankAccountPaymentIntent"}]}}}]}}}}}}},"/payment_intents/{id}":{"get":{"summary":"Get a Payment Intent","description":"Get information about a payment intent.","operationId":"GetPaymentIntent","tags":["Payment Intents"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a payment intent","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardPaymentIntent"},{"$ref":"#/components/schemas/BankAccountPaymentIntent"}]}}}}}},"patch":{"summary":"Update a Payment Intent","description":"Change a payment intent\'s description or metadata; attach a payment method.","operationId":"UpdatePaymentIntent","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payment Intents"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"description":{"type":"string","description":"your meaningful description of the payment intent (e.g. an order number or other value from your system)","example":"order_xyz"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment intent; when you update metadata, any previous metadata will be overwritten"},"payment_method":{"description":"can be updated if the payment intent status is `requires_payment_method` or `pending`","oneOf":[{"type":"object","properties":{"card":{"$ref":"#/components/schemas/CreateCard"},"token":{"type":"string","example":"pm_xyz"}}}]},"amount":{"type":"integer","description":"payment intent amount, in cents; can be updated if the payment intent status is `requires_payment_method` or `pending`","example":10000}}}}}},"responses":{"200":{"description":"Payment intent update was successful","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardPaymentIntent"},{"$ref":"#/components/schemas/BankAccountPaymentIntent"}]}}}}}}},"/payment_intents/{id}/capture":{"post":{"summary":"Capture a Payment Intent","description":"Capturing a payment intent lets JustiFi know you intend to process a payment. JustiFi will charge the attached payment method and create a payment.\\n\\n*Note: For platforms, if the sub account status is not `enabled`, `400` will be returned.*\\n","operationId":"CapturePaymentIntent","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payment Intents"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"payment_method":{"oneOf":[{"type":"object","properties":{"card":{"$ref":"#/components/schemas/CreateCard"},"token":{"type":"string","example":"pm_xyz"}}}]}}}}}},"responses":{"201":{"description":"Payment intent was captured successfully","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardPaymentIntent"},{"$ref":"#/components/schemas/BankAccountPaymentIntent"}]}}}}}}},"/payment_intents/{id}/payments":{"get":{"summary":"Get Payments for a Payment Intent","description":"Get information about the payments associated with a payment intent.","operationId":"GetPaymentIntentPayments","tags":["Payment Intents"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully retrieve the payments for a payment intent","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]}}}}}}},"/payments":{"post":{"summary":"Create a Payment","description":"Authorize, capture, and charge a payment method.\\n\\n*Note: For platforms, if the sub account status is not `enabled`, `400` will be returned.*\\n","operationId":"CreatePayment","tags":["Payments"],"parameters":[{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"amount":{"type":"number","example":10000,"description":"amount to charge in cents"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"capture_strategy":{"type":"string","example":"automatic","enum":["automatic","manual"],"description":"automatic will authorize and capture the payment in the same request, manual will only authorize the payment (which will need to be captured in a subsequent request).  Not supported by bank account (ACH) payment methods."},"email":{"description":"email address to associate with payment method","type":"string","format":"email"},"payment_method":{"oneOf":[{"type":"object","properties":{"card":{"$ref":"#/components/schemas/CreateCard"},"bank_account":{"$ref":"#/components/schemas/CreateBankAccount"},"token":{"type":"string","example":"pm_xyz"}}}]},"application_fee_amount":{"type":"integer","description":"sets a custom application fee amount that applies to this payment, instead of relying on application fee rates configured at the platform account level (*only Platforms may set application_fee_amount*). Must be greater than zero.","example":400},"description":{"type":"string","description":"your meaningful description of the payment (e.g. an order number or other value from your system)","example":"order_xyz"},"statement_descriptor":{"type":"string","description":"description of the payment that will be available on the account\'s bank statement, must have between 5-22 alphanumeric characters and can include dash or underscore"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment","example":{}}},"required":["amount","currency","capture_strategy","payment_method"]},"examples":{"Charge_10_USD_to_a_Card":{"value":{"amount":1000,"currency":"usd","capture_strategy":"automatic","email":"example@test.com","description":"Charging $10 to the test card","payment_method":{"card":{"name":"Sylvia Fowles","number":"4111111111111111","verification":"123","month":"3","year":"2040","address_postal_code":"55555","bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}}}}},"Charge_10_USD_to_a_Bank_Account":{"value":{"amount":1000,"currency":"usd","capture_strategy":"automatic","email":"example@test.com","description":"Charging $10 a bank account","payment_method":{"bank_account":{"account_owner_name":"Lindsay Whalen","routing_number":"110000000","account_number":"000123456789","account_type":"checking","account_owner_type":"individual","country":"US","currency":"usd"}}}},"Charge_10_USD_to_a_Tokenized_Payment_Method":{"value":{"amount":1000,"currency":"usd","capture_strategy":"automatic","email":"example@test.com","description":"Charging $10 a tokenized payment method","payment_method":{"token":"pm_justifi123"}}},"Charge_10_USD_to_a_Card_With_1.50_USD_Custom_application_fee_amount":{"value":{"amount":1000,"application_fee_amount":150,"currency":"usd","capture_strategy":"automatic","email":"example@test.com","description":"Charging $10 to the test card","payment_method":{"card":{"name":"Sylvia Fowles","number":"4111111111111111","verification":"123","month":"3","year":"2040","address_postal_code":"55555","bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}}}}}}}}},"responses":{"201":{"description":"Payment was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"payment"},"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Card_payment_created":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"my order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":"4242","brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"null","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}},"Bank_account_payment_created":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"my order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"cust_123xyz","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}}}}}}}},"get":{"summary":"List Payments","description":"List the payments for your account. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListPayments","tags":["Payments"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"},{"$ref":"#/components/parameters/financial-transaction-id"},{"$ref":"#/components/parameters/payment-method-id"},{"$ref":"#/components/parameters/created-after"},{"in":"query","name":"payment_status","schema":{"type":"string","enum":["succeeded","failed","pending","authorized","refunded","disputed"]},"required":false,"example":"refunded","description":"filter to payments which have request payment_status\\n"}],"responses":{"200":{"description":"Successfully list payments","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]}}}}}}},"/payments/{id}":{"get":{"summary":"Get a Payment","description":"Get information about a payment.","operationId":"GetPayment","tags":["Payments"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a payment","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Get_a_card_payment":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"my order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":"4242","brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":null,"signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}},"Get_a_bank_account_payment":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"my order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"cust_123xyz","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}}}}}}}},"patch":{"summary":"Update a Payment","description":"Change a payment\'s description or metadata.\\n","operationId":"UpdatePayment","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payments"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"description":{"type":"string","description":"your meaningful description of the payment (e.g. an order number or other value from your system)","example":"order_xyz new description"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment; when you update metadata, any previous metadata will be overwritten"}}}}}},"responses":{"200":{"description":"Payment update was successful","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Update_Card_Payment":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_refunded":0,"amount_disputed":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz new description","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":"4242","brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":null,"signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}},"Update_Bank_Account_Payment":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz new description","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"cust_123xyz","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}}}}}}}}},"/payments/{id}/capture":{"post":{"summary":"Capture a Payment","description":"To charge a payment method and capture a previously authorized payment.  Returns a `payment_already_captured` error if the payment is in a captured state.\\n\\n*Note: For platforms, if the sub account status is not `enabled`, `400` will be returned.*\\n","operationId":"CapturePayment","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payments"],"responses":{"200":{"description":"Payment with identical idempotency key was captured","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Card_payment_with_identical_idempotency_key_captured":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":"4242","brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":null,"signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}},"Bank_account_payment_with_identical_idempotency_key_captured":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"cust_123xyz","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}}}}}},"201":{"description":"Payment was captured successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Card_payment_captured":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":4242,"brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":null,"signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}},"Bank_account_payment_captured":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"cust_123xyz","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}}}}}}}}},"/payments/{id}/refunds":{"post":{"tags":["Payments","Refunds"],"summary":"Refund a Payment","description":"Issue a refund for a payment. You may refund the full payment amount or just a portion. When refunding a portion, multiple refunds are supported up until the full payment amount has been refunded.\\n\\n*Note: For platforms, if the sub account status is not `enabled`, `400` will be returned.*\\n","operationId":"CreateRefund","parameters":[{"in":"path","name":"id","schema":{"type":"string","format":"uuid"},"required":true},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"amount":{"type":"number","example":10000,"description":"amount to refund; must be less than or equal to the `amount_refundable` on the payment"},"description":{"description":"an optional note about this refund","type":"string"},"reason":{"description":"the reason this refund is being issued","type":"string","example":"duplicate","enum":["duplicate","fraudulent","customer_request"]},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this refund","example":{}}}}}}},"responses":{"201":{"description":"Refund was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"refund"},"data":{"$ref":"#/components/schemas/Refund"}}}]}}}}}}},"/payments/{id}/void":{"post":{"tags":["Payments","Voids"],"summary":"Void a Payment","description":"Void a payment transaction to cancel a payment before it reaches settlement. Payment transactions are voidable within 25 minutes of the original transaction. Only payments created with a card payment_method are eligible to be voided at this time.\\n","operationId":"VoidPayment","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Payment was voided successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Card_payment_voided":{"value":{"id":"py_123xyz","type":"payment","data":{"id":"py_123xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"canceled","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":4242,"brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":null,"signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"page_info":null}}}}}}}}},"/payments/{id}/payment_balance_transactions":{"get":{"summary":"Get Balance Transactions","description":"Get information about the payment-balance-transactions associated with a payment.","operationId":"GetPaymentBalanceTransactions","tags":["Payments"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully retrieve the payment-balance-transactions for a payment","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/PaymentBalanceTransaction"}}}}]}}}}}}},"/payment_methods":{"post":{"summary":"Create a Payment Method","description":"You can create payment methods ahead of time, then pass their existing tokens to payments.\\nAlternatively, you can create and tokenize payment methods inline when processing payments.\\n\\n*Note: For platforms, if the sub account status is not `enabled`, `400` will be returned.*\\n","operationId":"CreatePaymentMethod","tags":["Payment Methods"],"parameters":[{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"payment_method":{"oneOf":[{"type":"object","properties":{"card":{"$ref":"#/components/schemas/CreateCard"},"bank_account":{"$ref":"#/components/schemas/CreateBankAccount"}}}]},"email":{"description":"email address to associate with the payment method","type":"string","format":"email"}},"required":["payment_method"]},"example":null,"examples":{"Create_a_payment_method_for_card_payments":{"value":{"payment_method":{"card":{"name":"Lindsay Whalen","number":4242424242421111,"verification":123,"month":5,"year":2042,"address_postal_code":55555,"metadata":{"new":"info"}}}}},"Create_a_payment_method_for_ACH_payments":{"value":{"payment_method":{"bank_account":{"account_owner_name":"Lindsay Whalen","routing_number":"110000000","account_number":"000123456789","account_type":"checking","account_owner_type":"individual","country":"US","currency":"usd","metadata":{"new":"info"}}}}},"Create_a_reusable_payment_method_for_card_payments":{"value":{"email":"example@test.com","payment_method":{"card":{"name":"Lindsay Whalen","number":4242424242421111,"verification":"123","month":5,"year":2042,"address_postal_code":"55555","metadata":{"new":"info"}}}}}}}}},"responses":{"201":{"description":"Payment method was created successfully","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardResponse"},{"$ref":"#/components/schemas/BankAccountResponse"}]}}}}}},"get":{"summary":"List Payment Methods","description":"List the payment methods for your account. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListPaymentMethods","tags":["Payment Methods"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"},{"$ref":"#/components/parameters/customer-id"}],"responses":{"200":{"description":"Successfully list payment methods","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":[{"$ref":"#/components/schemas/CardPaymentMethod"},{"$ref":"#/components/schemas/BankAccountPaymentMethod"}]}}}]}}}}}}},"/payment_methods/{token}":{"get":{"summary":"Get a Payment Method","description":"Get information about a payment method.","operationId":"GetPaymentMethod","tags":["Payment Methods"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/token-path"}],"responses":{"200":{"description":"Successfully get a payment method","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardResponse"},{"$ref":"#/components/schemas/BankAccountResponse"}]}}}}}},"patch":{"summary":"Update a Payment Method","description":"Change a payment method\'s expiration date, address, or metadata.\\n","operationId":"UpdatePaymentMethod","parameters":[{"$ref":"#/components/parameters/token-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payment Methods"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"card":{"$ref":"#/components/schemas/UpdateCard"},"bank_account":{"$ref":"#/components/schemas/UpdateBankAccount"}}}}}},"responses":{"200":{"description":"Payment method update was successful","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardResponse"},{"$ref":"#/components/schemas/BankAccountResponse"}]}}}}}}},"/payment_methods/{token}/clone":{"post":{"summary":"Clone a Payment Method","description":"Copy a payment method from one sub account to another sub account. This allows one\\nto share payment methods between accounts without having to collect the card information again.\\nThe original payment method\'s id / token should be provided in the path.\\n","operationId":"ClonePaymentMethod","parameters":[{"$ref":"#/components/parameters/token-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payment Methods"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"destination_account_id":{"type":"string","description":"The sub account id to which the payment method should be cloned","example":"acc_xyz123"}}}}}},"responses":{"200":{"description":"Payment method clone was successful","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CardResponse"},{"$ref":"#/components/schemas/BankAccountResponse"}]}}}}}}},"/payouts":{"get":{"summary":"List Payouts","operationId":"ListPayouts","tags":["Payouts"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/created-before"},{"$ref":"#/components/parameters/created-after"},{"$ref":"#/components/parameters/deposits-before"},{"$ref":"#/components/parameters/deposits-after"}],"responses":{"200":{"description":"Successfully list payouts","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/Payout"}}}}]}}}}}}},"/payouts/{id}":{"get":{"summary":"Get a Payout","description":"Get information about a payout.","operationId":"GetPayout","tags":["Payouts"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a payout","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"payout"},"data":{"$ref":"#/components/schemas/Payout"}}}]}}}}}},"patch":{"summary":"Update a Payout","description":"Change a payout\'s metadata.","operationId":"UpdatePayout","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Payouts"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payout; when you update metadata, any previous metadata will be overwritten","example":{"customer_payout_id":"cp_12345"}}}}}}},"responses":{"200":{"description":"Payout update was successful","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"payout"},"data":{"$ref":"#/components/schemas/Payout"}}}]}}}}}}},"/reports/payouts/{id}":{"get":{"summary":"Get a Payout CSV Report","description":"Get a link to a CSV report with information a payout and balance transactions related to that payout. CSV report headers include id, currency, amount, fee, net, source_id, source_account_id, source_type, source_amount, available_on and created_at.","operationId":"GetPayoutCsvReport","tags":["Payouts"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a link to a csv report for a payout","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"payout"},"data":{"$ref":"#/components/schemas/PayoutCsvReport"}}}]}}}}}}},"/balance_transactions":{"get":{"summary":"List Balance Transactions","description":"List the balance transactions for your account. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListBalanceTransactions","tags":["Balance Transactions"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"in":"query","name":"payout_id","schema":{"type":"string"},"required":false,"example":"po_123xyz","description":"Filter records which are part of the payout with the specified id\\n"}],"responses":{"200":{"description":"Successfully list balance transactions","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/BalanceTransaction"}}}}]}}}}}}},"/balance_transactions/{id}":{"get":{"summary":"Get a Balance Transaction","description":"Get information about a balance transaction.","operationId":"GetBalanceTransaction","tags":["Balance Transactions"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a balance transaction","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"balance_transaction"},"data":{"$ref":"#/components/schemas/BalanceTransaction"}}}]}}}}}}},"/refunds":{"get":{"summary":"List Refunds","description":"List the refunds for your account. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListRefunds","tags":["Refunds"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"}],"responses":{"200":{"description":"Successfully list refunds","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/Refund"}}}}]}}}}}}},"/refunds/{id}":{"get":{"summary":"Get a Refund","description":"Get information about a refund.","operationId":"GetRefund","tags":["Refunds"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a refund","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"refund"},"data":{"$ref":"#/components/schemas/Refund"}}}]}}}}}},"patch":{"summary":"Update a Refund","description":"Update the refund metadata.","operationId":"UpdateRefund","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Refunds"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this refund; when you update metadata, any previous metadata will be overwritten"}}}}}},"responses":{"200":{"description":"Refund update was successful","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"refund"},"data":{"$ref":"#/components/schemas/Refund"}}}]}}}}}}},"/oauth/token":{"post":{"summary":"Generate Access Token","description":"To get an access token, post your `client_id` and `client_secret`.\\nThe request responds with an access token, which is valid for 24 hours. Pass the token as the `Authorization`\\nheader with `Bearer` appended before the token, e.g. `Bearer {access_token}`.\\n","operationId":"CreateAccessToken","tags":["API Credentials"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"client_id":{"type":"string","example":"test_clientId","description":"the client id for your (live or test) account"},"client_secret":{"type":"string","example":"test_clientSecret","description":"the client secret for your (live or test) account"}}},"example":{"client_id":"test_clientId","client_secret":"test_clientSecret"}}}},"responses":{"200":{"description":"An access token has been granted","content":{"application/json":{"schema":{"type":"object","properties":{"access_token":{"description":"an access token to pass to our API as the `Authorization` header with\\n`Bearer` appended before the token, e.g. `Bearer {access_token}`\\n","type":"string"}}}}}}},"servers":[{"url":"https://api.justifi.ai"}]}},"/disputes":{"get":{"summary":"List Disputes","description":"List the disputes for your account. This endpoint supports [pagination](/#section/Pagination).\\nThe disputes for a specific payment are also included in the payments API\\nresponse.\\n","operationId":"ListDisputes","tags":["Disputes"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"$ref":"#/components/parameters/sub-account"}],"responses":{"200":{"description":"Successfully list disputes","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/Dispute"}}}}]}}}}}}},"/disputes/{id}":{"get":{"summary":"Get a Dispute","description":"Get information about a dispute.","operationId":"GetDispute","tags":["Disputes"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a dispute","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"dispute"},"data":{"$ref":"#/components/schemas/Dispute"}}}]}}}}}},"patch":{"summary":"Update a Dispute","description":"Change a dispute\'s metadata.","operationId":"UpdateDispute","parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/idempotency-key-header"},{"$ref":"#/components/parameters/authorization-header"}],"tags":["Disputes"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this dispute; when you update metadata, any previous metadata will be overwritten"}}}}}},"responses":{"200":{"description":"Dispute update was successful","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"dispute"},"data":{"$ref":"#/components/schemas/Dispute"}}}]}}}}}}},"/checkout_sessions":{"post":{"summary":"Create a Checkout Session","description":"Checkout sessions required to generate a session for our hosted checkout solution.\\n","operationId":"CreateCheckoutSession","tags":["Checkout Sessions"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"payment_intent_id":{"type":"string","format":"uuid","example":"pi_123xyz","description":"payment intent you intend to capture with this checkout session"},"after_payment_url":{"type":"string","example":"https://my-platform.test/order/123/success","description":"a url to handle a redirect after successful checkout"},"back_url":{"type":"string","example":"https://my-platform.test/order/123/cancel","description":"a url to handle a redirect from the back button on our checkout form"}},"required":["payment_intent_id","after_payment_url"]}}}},"responses":{"201":{"description":"Checkout session was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"checkout_session"},"data":{"type":"object","properties":{"checkout_session_id":{"description":"checkout session id","type":"string","example":"5966b59548d42d77f97052ab0091b677636024751134d228cbb051ce8081a74f"}}}}}]}}}}}}},"/insurance/bind":{"post":{"summary":"Bind an Insurance Policy","description":"Used to bind an insurance policy with a JustiFi insurance partner\\n","operationId":"BindInsurance","tags":["Bind Insurance"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"payment_method_id":{"type":"string","format":"uuid","example":"pm_123","description":"Payment method to charge for insurance policy"},"amount":{"type":"number","example":10000,"description":"amount to charge in cents"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"partner_quote_id":{"type":"string","example":"ins-test-123","description":"quote id provided by partner provider"},"partner_name":{"type":"string","enum":["vertical_insure"],"example":"vertical_insure","description":"partner insurance provider"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this record","example":{}}},"required":["payment_method_id","amount","partner_quote_id","partner_name"]}}}},"responses":{"201":{"description":"Insurance Policy was bound successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"id":{"example":"ins_xyz"},"type":{"example":"insurance_policy"},"data":{"$ref":"#/components/schemas/InsurancePolicy"}}}]}}}}}}},"/entities/business":{"post":{"summary":"Create a Business","description":"Create a Business\\n","operationId":"CreateBusiness","tags":["Business"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"legal_name":{"type":"string","example":"Business Name","description":"legal business entity name"},"website_url":{"type":"string","example":"https://justifi.ai","description":"website for this business (if they don\'t have a website, can send their social media business page, app store link, or a product description instead)"},"email":{"type":"string","example":"business@justifi.ai","description":"email address of business entity or representative"},"phone":{"type":"string","example":"6124011111","description":"business phone number"},"doing_business_as":{"type":"string","example":"Best Business","description":"only needed if registered with DBA/Trade Name on SS-4 tax document"},"business_type":{"type":"string","enum":["for_profit","non_profit","government_entity","individual"]},"business_structure":{"type":"string","enum":["sole_proprietorship","single_llc","multi_llc","private_partnership","private_corporation","unincorporated_association","public_partnership","public_corporation","incorporated","unincorporated","government_unit","government_instrumentality","tax_exempt_government_instrumentality"]},"industry":{"type":"string","example":"Big Business","description":"to help us identify this business entity\'s category code (MCC), please provide a concise description of what service they offer"},"mcc":{"type":"string","example":"8021","description":"merchant category code for this business, if known. Please note, the JustiFi underwriting team may modify this. If you are unsure, just submit a description in the industry field instead of an MCC"},"tax_id":{"type":"string","description":"the federal tax identification number/EIN issued to this sub account by the IRS (for Individual type, this will be their full SSN)"},"date_of_incorporation":{"type":"string","example":"2015-02-20","description":"the specific day when this business was officially registered with a relevant government authority and was then permitted to carry out its activities"},"metadata":{"type":"object","description":"any useful information you\'d like to store alongside this business","additionalProperties":true,"example":{"arr":1200,"social_network":"@business"}},"additional_questions":{"additionalProperties":true,"$ref":"#/components/schemas/AdditionalQuestions"},"legal_address":{"oneOf":[{"$ref":"#/components/schemas/Address"},{"type":"object","properties":{"id":{"type":"string","example":"addr_xyz"}}}]},"representative":{"oneOf":[{"$ref":"#/components/schemas/Identity"},{"type":"object","properties":{"id":{"type":"string","example":"idty_xyz"}}}]},"owners":{"type":"array","description":"up to four business owners total; do not re-record the financial representative if they are marked as an owner","items":{"oneOf":[{"$ref":"#/components/schemas/Identity"},{"type":"object","properties":{"id":{"type":"string","example":"idty_xyz"}}}]}}}}}}},"responses":{"201":{"description":"Business entity was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"business"},"data":{"$ref":"#/components/schemas/BusinessResponse"}}}]}}}}}},"get":{"summary":"List Businesses","description":"List businesses for your platform. This endpoint supports [pagination](/#section/Pagination).\\n","operationId":"ListBusinesses","tags":["Business"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully list businesses","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/BusinessResponse"}}}}]}}}}}}},"/entities/business/{id}":{"patch":{"summary":"Update a Business","description":"Update information about a Business","operationId":"UpdateBusiness","tags":["Business"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"legal_name":{"type":"string","example":"Business Name","description":"legal business entity name"},"website_url":{"type":"string","example":"https://justifi.ai","description":"website for this business (if they don\'t have a website, can send their social media business page, app store link, or a product description instead)"},"email":{"type":"string","example":"business@justifi.ai","description":"email address of business entity or representative"},"phone":{"type":"string","example":"6124011111","description":"business phone number"},"doing_business_as":{"type":"string","example":"Best Business","description":"only needed if registered with DBA/Trade Name on SS-4 tax document"},"business_type":{"type":"string","enum":["for_profit","non_profit","government_entity","individual"]},"business_structure":{"type":"string","enum":["sole_proprietorship","single_llc","multi_llc","private_partnership","private_corporation","unincorporated_association","public_partnership","public_corporation","incorporated","unincorporated","government_unit","government_instrumentality","tax_exempt_government_instrumentality"]},"industry":{"type":"string","example":"Big Business","description":"to help us identify this business entity\'s category code (MCC), please provide a concise description of what service they offer"},"mcc":{"type":"string","example":"8021","description":"merchant category code for this business, if known. Please note, the JustiFi underwriting team may modify this. If you are unsure, just submit a description in the industry field instead of an MCC"},"tax_id":{"type":"string","description":"the federal tax identification number/EIN issued to this sub account by the IRS (for Individual type, this will be their full SSN)"},"date_of_incorporation":{"type":"string","example":"2015-02-20","description":"the specific day when this business was officially registered with a relevant government authority and was then permitted to carry out its activities"},"metadata":{"type":"object","description":"any useful information you\'d like to store alongside this business","additionalProperties":true,"example":{"arr":1200,"social_network":"@business"}},"additional_questions":{"additionalProperties":true,"$ref":"#/components/schemas/AdditionalQuestions"},"legal_address":{"oneOf":[{"$ref":"#/components/schemas/Address"},{"type":"object","properties":{"id":{"type":"string","example":"addr_xyz"}}}]},"representative":{"oneOf":[{"$ref":"#/components/schemas/Identity"},{"type":"object","properties":{"id":{"type":"string","example":"idty_xyz"}}}]}}}}}},"responses":{"200":{"description":"Successfully update a business","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"business"},"data":{"$ref":"#/components/schemas/BusinessResponse"}}}]}}}}}},"get":{"summary":"Get a Business","description":"Get information about a Business","operationId":"GetBusiness","tags":["Business"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a business","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"business"},"data":{"$ref":"#/components/schemas/BusinessResponse"}}}]}}}}}}},"/entities/identity":{"post":{"summary":"Create an Identity","description":"Create an Identity\\n","operationId":"CreateIdentity","tags":["Identity"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"name":{"type":"string","example":"Person Name","description":"legal name"},"title":{"type":"string","example":"President","description":"job title"},"email":{"type":"string","example":"person.name@justifi.ai","description":"email address"},"phone":{"type":"string","example":"6124011111","description":"phone number"},"dob_day":{"type":"string","example":"01","description":"two-digit birth day"},"dob_month":{"type":"string","example":"01","description":"two-digit birth month"},"dob_year":{"type":"string","example":"1980","description":"four-digit birth year (must be at least 18 years old)"},"identification_number":{"type":"string","example":"123456789","description":"full social security number"},"is_owner":{"type":"boolean","example":true,"description":"if an identity owns 25% or more of the business, they are considered an owner"},"metadata":{"type":"object","description":"any useful information you\'d like to store alongside this identity","additionalProperties":true,"example":{"language":"english","social_network":"@person"}},"address":{"oneOf":[{"$ref":"#/components/schemas/Address"},{"type":"object","properties":{"id":{"type":"string","example":"addr_xyz"}}}]}}}}}},"responses":{"201":{"description":"Identity was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"identity"},"data":{"$ref":"#/components/schemas/IdentityResponse"}}}]}}}}}},"get":{"summary":"List Identities","description":"List identities for your platform. This endpoint supports [pagination](/#section/Pagination).\\n","operationId":"ListIdentities","tags":["Identity"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully list identities","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/IdentityResponse"}}}}]}}}}}}},"/entities/identity/{id}":{"patch":{"summary":"Update an Identity","description":"Update information about an Identity","operationId":"UpdateIdentity","tags":["Identity"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"name":{"type":"string","example":"Person Name","description":"legal name"},"title":{"type":"string","example":"President","description":"job title"},"email":{"type":"string","example":"person.name@justifi.ai","description":"email address"},"phone":{"type":"string","example":"6124011111","description":"phone number"},"dob_day":{"type":"string","example":"01","description":"two-digit birth day"},"dob_month":{"type":"string","example":"01","description":"two-digit birth month"},"dob_year":{"type":"string","example":"1980","description":"four-digit birth year (must be at least 18 years old)"},"identification_number":{"type":"string","example":"123456789","description":"full social security number"},"is_owner":{"type":"boolean","description":"if an identity owns 25% or more of the business, they are considered an owner"},"metadata":{"type":"object","description":"any useful information you\'d like to store alongside this identity","additionalProperties":true,"example":{"language":"english","social_network":"@person"}}}}}}},"responses":{"200":{"description":"Identity updated","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"identity"},"data":{"$ref":"#/components/schemas/IdentityResponse"}}}]}}}}}},"get":{"summary":"Get an Identity","description":"Get information about an Identity","operationId":"GetIdentity","tags":["Identity"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Get Identity","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"identity"},"data":{"$ref":"#/components/schemas/IdentityResponse"}}}]}}}}}}},"/entities/address":{"post":{"summary":"Create an Address","description":"Create an Address\\n","operationId":"CreateAddress","tags":["Address"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"line1":{"type":"string","example":"123 Example St"},"line2":{"type":"string","example":"# 61157"},"city":{"type":"string","example":"Minneapolis"},"state":{"type":"string","example":"MN"},"postal_code":{"type":"string","example":"55555"},"country":{"type":"string","example":"USA"}}}}}},"responses":{"201":{"description":"Address was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"address"},"data":{"$ref":"#/components/schemas/AddressResponse"}}}]}}}}}},"get":{"summary":"List Addresses","description":"List addresses for your platform. This endpoint supports [pagination](/#section/Pagination).\\n","operationId":"ListAddresses","tags":["Address"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully list addresses","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/AddressResponse"}}}}]}}}}}}},"/entities/address/{id}":{"patch":{"summary":"Update an Address","description":"Update information about an Address","operationId":"UpdateAddress","tags":["Address"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"line1":{"type":"string","example":"123 Example St"},"line2":{"type":"string","example":"# 61157"},"city":{"type":"string","example":"Minneapolis"},"state":{"type":"string","example":"MN"},"postal_code":{"type":"string","example":"55555"},"country":{"type":"string","example":"USA"}}}}}},"responses":{"200":{"description":"Address updated","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"address"},"data":{"$ref":"#/components/schemas/AddressResponse"}}}]}}}}}},"get":{"summary":"Get an Address","description":"Get information about an Address","operationId":"GetAddress","tags":["Address"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Get Address","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"address"},"data":{"$ref":"#/components/schemas/AddressResponse"}}}]}}}}}}},"/entities/document":{"post":{"summary":"Create a Document","description":"Create a reference to a document, and receive a presigned URL for uploading the document\\n","operationId":"CreateDocument","tags":["Document"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"description":{"type":"string","example":"My Document"},"file_name":{"type":"string","example":"the_file_name"},"file_type":{"type":"string","example":"application/pdf","description":"the file media type/extension of the file you are uploading. For example, text/plain, application/pdf, image/png"},"document_type":{"type":"string","enum":["balance_sheet","bank_statement","government_id","profit_and_loss_statement","tax_return","other"],"example":"balance_sheet"},"business_id":{"type":"string","format":"uuid","example":"biz_abc123","description":"the business id to associate with this document (one of business id or identity id is required)"},"identity_id":{"type":"string","format":"uuid","example":"idty_abc123","description":"the identity id to associate with this document (one of business id or identity id is required)"},"metadata":{"type":"object","description":"any useful information you\'d like to store alongside this document","example":{"my_id":"123"}}},"required":["file_name","file_type","document_type"]}}}},"responses":{"201":{"description":"Document was created and presigned successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"document"},"data":{"$ref":"#/components/schemas/Document"}}}]}}}}}},"get":{"summary":"List Documents","description":"List the documents you have uploaded. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListDocuments","tags":["Document"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully list documents","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/Document"}}}}]}}}}}}},"/entities/document/{id}":{"get":{"summary":"Get a Document","description":"Get details about a document, and a presigned download URL","operationId":"GetDocument","tags":["Document"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Get Document","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"document"},"data":{"$ref":"#/components/schemas/Document"}}}]}}}}}}},"/entities/bank_accounts":{"post":{"summary":"Create a Bank Account","description":"Create a bank account\\n","operationId":"CreateBankAccount","tags":["Bank Account"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"account_owner_name":{"type":"string","description":"name of the account owner","example":"Napheesa Collier"},"account_type":{"type":"string","description":"type of account","enum":["checking savings"],"example":"checking"},"account_number":{"type":"string","description":"the account number","example":"000123456789"},"routing_number":{"type":"string","description":"routing number","example":"110000000"},"business_id":{"type":"string","description":"business id which owns the account","format":"uuid","example":"biz_abc123"},"bank_name":{"type":"string","description":"bank name","example":"Wells Fargo"},"nickname":{"type":"string","description":"nickname for the bank account","example":"Phee\'s Money"},"metadata":{"type":"object","description":"any useful information you\'d like to store alongside this bank account","example":{"my_id":"123"}}},"required":["account_owner_name","account_type","account_number","routing_number","business_id"]}}}},"responses":{"201":{"description":"Bank Account was created successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"bank_account"},"data":{"$ref":"#/components/schemas/EntityBankAccount"}}}]}}}}}},"get":{"summary":"List Bank Accounts","description":"List the bank accounts you have created for a business. This endpoint supports [pagination](/#section/Pagination).","operationId":"ListBankAccounts","tags":["Bank Account"],"parameters":[{"$ref":"#/components/parameters/authorization-header"},{"in":"query","name":"business_id","schema":{"type":"string"},"required":false,"example":"biz_xyz","description":"filter bank accounts which are associated with a business"}],"responses":{"200":{"description":"Successfully list bank accounts","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/EntityBankAccount"}}}}]}}}}}}},"/entities/bank_accounts/{id}":{"get":{"summary":"Get a Bank Account","description":"Get details about a bank account","operationId":"GetBankAccount","tags":["Bank Account"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Get Bank Account","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"bank_account"},"data":{"$ref":"#/components/schemas/EntityBankAccount"}}}]}}}}}}},"/entities/terms_and_conditions":{"post":{"summary":"Terms and Conditions","description":"Accept current Terms and Conditions\\n","operationId":"TermsAndConditions","tags":["Terms and Conditions"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"business_id":{"type":"string","example":"biz_xyz","description":"business id"},"accepted":{"type":"boolean","example":true,"description":"accepts terms and conditions"},"ip":{"type":"string","example":"142.250.219.46","description":"client ip address"},"user_agent":{"type":"string","example":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Safari/605.1.15","description":"client identification information"}},"required":["business_id","accepted","ip"]}}}},"responses":{"201":{"description":"Terms and Conditions successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"onboarding"},"data":{"properties":{"id":{"description":"unique terms and conditions id","type":"string","format":"uuid","example":"tac_xyz"},"business_id":{"type":"string","example":"biz_xyz"},"accepted":{"type":"boolean","example":true},"ip":{"type":"string","example":"142.250.219.46"},"user_agent":{"type":"string","example":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Safari/605.1.15"}}}}}]}}}}}}},"/entities/provisioning":{"post":{"summary":"Product Provisioning","description":"Product Provisioning\\n","operationId":"ProductProvisioning","tags":["Provisioning"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"new_account_name":{"type":"string","example":"JustiFi","description":"account name (must be unique for a platform)"},"business_id":{"type":"string","example":"biz_123","description":"business associated with the account"},"product_category":{"type":"string","example":"payment","description":"type of product to be provisioned"}},"required":["new_account_name","business_id","product_category"]}}}},"responses":{"201":{"description":"Provisioning successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"onboarding"},"data":{"$ref":"#/components/schemas/ProvisioningResponse"}}}]}}}}}}},"/ach_return_fees/{id}":{"get":{"summary":"Get an Ach Return Fee","description":"Get information about ach return fee.","operationId":"GetAchReturnFee","tags":["Ach Return Fees"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get an ach return fee","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"account_ach_return_fee"},"data":{"$ref":"#/components/schemas/AchReturnFee"}}}]}}}}}}},"/terminals/pay":{"post":{"summary":"Pay via Terminal","description":"Send a payment intent to be processed via terminal, listen for payment_intent events (recommended) or poll payment intent API for payment outcome","operationId":"payTerminal","tags":["Terminals"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"payment_intent_id":{"type":"string","format":"uuid","example":"pi_abc123","description":"id for the payment intent which you want to process via terminal\\n"},"terminal_id":{"type":"string","format":"uuid","example":"trm_abc123","description":"id of the terminal on which you want to process a transaction\\n"}},"required":["payment_intent_id","terminal_id"]}}}},"responses":{"201":{"description":"Payment Intent sent to terminal for processing","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"terminal_payment_intent"},"id":{"example":"tmses_abc123"},"data":{"properties":{"payment_intent":{"$ref":"#/components/schemas/CardPaymentIntent"},"terminal":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"trm_abc123"}}}}}}}]}}}}}}},"/terminals":{"get":{"summary":"List Terminals","operationId":"listTerminals","tags":["Terminals"],"parameters":[{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully list terminals","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope-list"},{"properties":{"type":{"example":"array"},"data":{"items":{"$ref":"#/components/schemas/Terminal"}}}}]}}}}}}},"/terminals/{id}":{"get":{"summary":"Get a Terminal","operationId":"getTerminal","tags":["Terminals"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get a terminal","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"terminal"},"data":{"$ref":"#/components/schemas/Terminal"}}}]}}}}}}},"/terminals/{id}/status":{"get":{"summary":"Get Terminal Status","operationId":"getTerminalStatus","tags":["Terminals"],"parameters":[{"$ref":"#/components/parameters/id-path"},{"$ref":"#/components/parameters/authorization-header"}],"responses":{"200":{"description":"Successfully get terminal status","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Envelope"},{"properties":{"type":{"example":"terminal"},"data":{"$ref":"#/components/schemas/TerminalStatus"}}}]}}}}}}}},"x-webhooks":{"payments":{"post":{"description":"Received for the following events: payment.created, payment.succeeded, payment.failed,\\npayment.pending, payment.authorized, payment.captured, payment.canceled\\n","tags":["Events"],"operationId":"paymentEvent","summary":"Payments","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPayment"},{"$ref":"#/components/schemas/BankAccountPayment"}]}}}]},"example":null,"examples":{"Card_payment_created_event":{"value":{"id":"evt_123xyz","account_id":"acc_123xyz","account_type":"test","platform_account_id":"acc_987zyx","idempotency_key":"string","request_id":"req_123","version":"v1","data":{"id":"py_xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"my order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"card":{"id":"pm_123xyz","acct_last_four":"4242","brand":"visa","name":"Sylvia Fowles","token":"pm_123xyz","metadata":{},"bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":null,"signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"event_name":"payment.created"}},"Bank_account_payment_created_event":{"value":{"id":"evt_123xyz","account_id":"acc_123xyz","account_type":"test","platform_account_id":"acc_987zyx","idempotency_key":"string","request_id":"req_123","version":"v1","data":{"id":"py_xyz","account_id":"acc_123xyz","amount_disputed":0,"amount_refunded":0,"amount_returned":0,"amount":10000,"amount_refundable":10000,"application_fee_rate_id":"afr_123xyz","balance":99850,"capture_strategy":"automatic","captured":true,"created_at":"2021-01-01T12:00:00Z","currency":"usd","description":"my order xyz","disputed":false,"error_code":null,"error_description":null,"fee_amount":150,"financial_transaction_id":"ft_123xyz","is_test":true,"metadata":{},"payment_intent_id":"pi_xyz","refunded":false,"returned":false,"status":"succeeded","updated_at":"2021-01-01T12:00:00Z","payment_method":{"bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"customer_id":"cust_123xyz","signature":"123abc"},"application_fee":{"id":"fee_123xyz","amount":150,"currency":"usd","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"refunds":[],"disputes":[]},"event_name":"payment.created"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}},"payment_intents":{"post":{"description":"Received for the following events: payment_intent.attached, payment_intent.created, payment_intent.requires_capture, payment_intent.succeeded\\n","tags":["Events"],"operationId":"paymentIntentEvent","summary":"Payment Intents","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPaymentIntent"},{"$ref":"#/components/schemas/BankAccountPaymentIntent"}]}}}]},"example":null,"examples":{"Card_payment_intent_succeeded_event":{"value":{"id":"evt_123xyz","account_id":"acc_123xyz","account_type":"test","platform_account_id":"acc_987zyx","idempotency_key":"string","request_id":"req_123","version":"v1","data":{"id":"pi_xyz","account_id":"acc_123xyz","amount":10000,"currency":"usd","description":"my order xyz","last_error":null,"metadata":{},"status":"succeeded","payment_method":{"customer_id":null,"signature":"123abc","card":{"id":"pm_123xyz","name":"Sylvia Fowles","acct_last_four":"4242","brand":"visa","token":"pm_123xyz","month":"5","year":"2042","metadata":{},"address_line1_check":"pass","address_postal_code_check":"pass","bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"}},"event_name":"payment_intent.succeeded"}},"Bank_account_payment_intent_succeeded_event":{"value":{"id":"evt_123xyz","account_id":"acc_123xyz","account_type":"test","platform_account_id":"acc_987zyx","idempotency_key":"string","request_id":"req_123","version":"v1","data":{"id":"pi_xyz","account_id":"acc_123xyz","amount":10000,"currency":"usd","description":"my order xyz","last_error":null,"metadata":{},"status":"succeeded","payment_method":{"customer_id":null,"signature":"123abc","bank_account":{"id":"pm_123xyz","acct_last_four":"4242","name":"Sylvia Fowles","brand":"Wells Fargo","token":"pm_123xyz","created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"},"created_at":"2021-01-01T12:00:00Z","updated_at":"2021-01-01T12:00:00Z"}},"event_name":"payment_intent.succeeded"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}},"payment_methods":{"post":{"description":"Received for the following events: payment_method.created, payment_method.updated, payment_method.bin_mapped\\n","tags":["Events"],"operationId":"paymentMethodEvent","summary":"Payment Methods","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"oneOf":[{"$ref":"#/components/schemas/CardPaymentMethod"},{"$ref":"#/components/schemas/BankAccountPaymentMethod"}]}}}]},"example":null,"examples":{"Card_payment_method_created_event":{"value":{"id":"evt_123xyz","account_id":"acc_123xyz","account_type":"test","platform_account_id":"acc_456abc","idempotency_key":"30abie390hjag49h","request_id":"req_100abc","version":"v1","data":{"signature":"9fxy123","customer_id":"cust_987zyx","card":{"id":"pm_123xyz","name":"Sylvia Fowles","acct_last_four":"4242","brand":"visa","token":"pm_123xyz","month":"5","year":"2042","metadata":{},"address_line1_check":"pass","address_postal_code_check":"pass","bin_details":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}}},"event_name":"payment_method.created"}},"Bank_account_payment_method_created_event":{"value":{"id":"evt_123xyz","account_id":"acc_123xyz","account_type":"test","platform_account_id":"acc_456abc","idempotency_key":"30abie390hjag49h","request_id":"req_100abc","version":"v1","data":{"signature":"9fxy123","customer_id":"cust_987zyx","bank_account":{"id":"pm_123xyz","acct_last_four":"9876","brand":"Wells Fargo","name":"Phil Kessel","token":"pm_123xyz","metadata":{}}},"event_name":"payment_method.created"}}}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}},"refunds":{"post":{"description":"Received for the following events: payment.refunded, payment.refund.updated\\n","tags":["Events"],"operationId":"refundEvent","summary":"Refunds","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"$ref":"#/components/schemas/Refund"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}},"disputes":{"post":{"description":"Received for the following events: payment.dispute.created, payment.dispute.closed\\n","tags":["Events"],"operationId":"disputeEvent","summary":"Disputes","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"$ref":"#/components/schemas/Dispute"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully.  You must respond within 5 seconds."}}}},"payouts":{"post":{"description":"Received for the following events: payout.created, payout.paid, payout.failed, proceeds.payout.created\\n","tags":["Events"],"operationId":"payoutEvent","summary":"Payouts","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"$ref":"#/components/schemas/Payout"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}},"sub_accounts":{"post":{"description":"Received for the following events: sub_account.updated. This is published when an account\'s status changes.\\n","tags":["Events"],"operationId":"subAccountEvent","summary":"Sub Accounts","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"$ref":"#/components/schemas/SubAccount"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}},"application_fee_rates":{"post":{"description":"Received for the following events: application_fee_rate.created, application_fee_rate.updated\\n","tags":["Events"],"operationId":"applicationFeeRateEvent","summary":"Application Fee Rates","requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Event"},{"properties":{"data":{"$ref":"#/components/schemas/ApplicationFeeRate"}}}]}}}},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully. You must respond within 5 seconds."}}}}},"components":{"parameters":{"authorization-header":{"in":"header","name":"Authorization","schema":{"type":"string"},"required":true,"example":"Bearer {access_token}","description":"the `access_token` value returned from the JustiFi `oauth/token` endpoint (be sure to append `Bearer` before the token)"},"id-path":{"in":"path","name":"id","schema":{"type":"string","format":"uuid"},"required":true},"created-before":{"in":"query","name":"created_before","schema":{"type":"string","format":"date-time"},"required":false,"example":"2022-01-01T00:00:00Z","description":"filter records which were created before the date and time (UTC) specified. Dates without time specified will default to 00:00:00\\n"},"created-after":{"in":"query","name":"created_after","schema":{"type":"string","format":"date-time"},"required":false,"example":"2022-01-01T00:00:00Z","description":"filter records which were created after the date and time (UTC) specified. Dates without time specified will default to 00:00:00\\n"},"deposits-before":{"in":"query","name":"deposits_before","schema":{"type":"string","format":"date-time"},"required":false,"example":"2022-01-01T00:00:00Z","description":"filter records which deposit before the date and time (UTC) specified. Dates without time specified will default to 00:00:00\\n"},"deposits-after":{"in":"query","name":"deposits_after","schema":{"type":"string","format":"date-time"},"required":false,"example":"2022-01-01T00:00:00Z","description":"filter records which deposit after the date and time (UTC) specified. Dates without time specified will default to 00:00:00\\n"},"sub-account":{"in":"header","name":"Sub-Account","schema":{"type":"string"},"required":false,"example":"acc_123xyz","description":"for platforms, the id of the [sub account](/#tag/Sub-Accounts) that this request applies to\\n"},"idempotency-key-header":{"in":"header","name":"Idempotency-Key","schema":{"type":"string","format":"uuid"},"required":true,"example":"my-request-123abc","description":"a string to identify your request (we recommend using a generated uuid, but you may use any unique string) see [Idempotent Requests](https://developer.justifi.ai/#section/Idempotent-Requests)"},"financial-transaction-id":{"in":"query","name":"financial_transaction_id","schema":{"type":"string"},"required":false,"example":"ft_123xyz","description":"filter records which are associated with a financial transaction.\\n"},"payment-method-id":{"in":"query","name":"payment_method_id","schema":{"type":"string"},"required":false,"example":"pm_123xyz","description":"filter records which are associated with a payment method.\\n"},"customer-id":{"in":"query","name":"customer_id","schema":{"type":"string"},"required":false,"example":"cust_123xyz","description":"filter records which are associated with a customer.\\n"},"token-path":{"in":"path","name":"token","schema":{"type":"string"},"required":true}},"schemas":{"PageInfo":{"type":"object","properties":{"end_cursor":{"description":"the encoded id of the last record in the current list","type":"string","example":"WyIyMDIyLTAyLTA4IDE5OjUyOjM3LjEwNDE3MzAwMCIsIjY4MDliYTU5LTYxYjctNDg3MS05YWFiLWE2Y2MyNmY3M2M1ZCJd"},"has_next":{"description":"true if the collection contains records following the current list","type":"boolean","default":false},"has_previous":{"description":"true if the collection contains records ahead of the current list","type":"boolean","default":false},"start_cursor":{"description":"the encoded id of the first record in the current list","type":"string","example":"WyIyMDIyLTAyLTA4IDIwOjAxOjU4LjEyMDIzMjAwMCIsIjU5ZTFjNGI1LWFlOWQtNDIyZC04MTVkLWNjNzQ5NzdlYmFjYSJd"}}},"Envelope-list":{"type":"object","properties":{"id":{"description":"the object id","type":"number","example":1},"type":{"description":"the object type, or array of objects","type":"string","example":"account"},"data":{"description":"the list of objects","type":"array"},"page_info":{"description":"information for cursor style pagination","$ref":"#/components/schemas/PageInfo"}}},"SubAccount":{"type":"object","properties":{"id":{"description":"sub account id","type":"string","example":"acc_xyz"},"name":{"description":"sub account name","type":"string","example":"The Shire Haberdashery"},"account_type":{"description":"sub account type (live or test)","type":"string","example":"live"},"status":{"description":"sub account status","type":"string","enum":["created","submitted","information_needed","rejected","enabled","disabled","archived"],"example":"enabled"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"platform_account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"application_fee_rates":{"type":"array","description":"list of associated application fee rates"},"processing_ready":{"description":"sub account ready for processing","type":"boolean","example":false},"payout_ready":{"description":"sub account ready for payouts","type":"boolean","example":false},"related_accounts":{"description":"when you create a live sub account, a related test account is automatically created; this provides both ids","type":"object","properties":{"live_account_id":{"type":"string","format":"uuid","description":"live sub account JustiFi id (this will be nil if creating a sub account using test credentials)","example":"acc_xyz"},"test_account_id":{"type":"string","format":"uuid","description":"test sub account JustiFi id","example":"acc_xyz"}}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Envelope":{"type":"object","properties":{"id":{"description":"the object id","type":"number","example":1},"type":{"description":"the object type, or array of objects","type":"string","example":"account"},"data":{"description":"the attributes for the object","type":"object"},"page_info":{"description":"information for cursor style pagination, is null for single records","type":"string","nullable":true}}},"OnboardingEntry":{"type":"object","properties":{"onboarding_version":{"type":"string","example":"v2.0","description":"defaults based on your account, v1.0 is deprecated for new platforms"},"business_details":{"type":"object","description":"information about the sub account\'s business, as defined on their SS-4 tax document","properties":{"url":{"type":"string","example":"https://justifi.ai","description":"website for this sub account (if they don\'t have a website, can send their social media business page, app store link, or a product description instead)"},"type":{"type":"string","enum":["for_profit","non_profit","government_entity","individual"]},"structure":{"type":"string","enum":["sole_proprietorship","single_llc","multi_llc","private_partnership","private_corporation","unincorporated_association","public_partnership","public_corporation","incorporated","unincorporated","government_unit","government_instrumentality","tax_exempt_government_instrumentality"]},"industry":{"type":"string","description":"to help us identify this sub account\'s merchant category code (MCC), please provide a concise description of what they sell"},"tax_id":{"type":"string","description":"the federal tax identification number/EIN issued to this sub account by the IRS (for Individual type, this will be their full SSN)"},"phone":{"type":"string","description":"business phone number for this sub account"},"email":{"type":"string","description":"business email address for this sub account"},"date_of_incorporation":{"type":"string","description":"business date of incorporation","example":"2023-09-12"},"approximate_annual_volume":{"type":"string","description":"business estimated annual payment volume","example":"1000000"},"legal":{"type":"object","description":"legal entity name and address registered for this sub account (no PO boxes)\\n","properties":{"name":{"type":"string"},"address_line1":{"type":"string"},"address_line2":{"type":"string"},"address_city":{"type":"string"},"address_state":{"type":"string"},"address_postal_code":{"type":"string"},"address_country":{"type":"string"}}},"doing_business_as":{"type":"object","description":"only needed if this sub account registered with a DBA/trade name on their SS-4 tax document\\n","properties":{"name":{"type":"string"}}}}},"representative":{"type":"object","description":"personal information about the financial representative -- this must be someone who has significant control over managing this sub account\'s finances","properties":{"name":{"type":"string","description":"legal name of financial representative"},"title":{"type":"string","description":"job title of financial representative, e.g. President, CEO, VP of Payments"},"email":{"type":"string","format":"email","description":"email address of financial representative"},"identification_number":{"type":"string","description":"ssn of financial representative, e.g. 123-45-6789"},"dob_month":{"type":"string","description":"two-digit date of birth month for financial representative, e.g. 02"},"dob_day":{"type":"string","description":"two-digit date of birth day for financial representative, e.g. 02"},"dob_year":{"type":"string","description":"four-digit date of birth year for financial representative, e.g. 2002 (must be at least 18 years old)"},"address_line1":{"type":"string"},"address_line2":{"type":"string"},"address_city":{"type":"string"},"address_state":{"type":"string"},"address_postal_code":{"type":"string"},"address_country":{"type":"string"},"phone":{"type":"string"},"is_owner":{"type":"boolean","description":"if the financial representative owns 25% or more of the business, they are considered an owner"}}},"owners":{"type":"array","description":"up to four business owners total; do not re-record the financial representative if they are marked as an owner","items":{"type":"object","properties":{"name":{"type":"string","description":"legal name of owner"},"email":{"type":"string","format":"email","description":"email address of owner"},"identification_number":{"type":"string","description":"ssn of owner, e.g. 123-45-6789"},"dob_month":{"type":"string","description":"two-digit date of birth month for owner, e.g. 02"},"dob_day":{"type":"string","description":"two-digit date of birth day for owner, e.g. 02"},"dob_year":{"type":"string","description":"four-digit date of birth year for owner, e.g. 2002 (must be at least 18 years old)"},"address_line1":{"type":"string"},"address_line2":{"type":"string"},"address_city":{"type":"string"},"address_state":{"type":"string"},"address_postal_code":{"type":"string"},"address_country":{"type":"string"}}}},"bank_account":{"type":"object","description":"bank account which will be used for payouts to the sub account (must be a US-based checking account)","properties":{"bank_name":{"type":"string","description":"name of the bank, e.g. Wells Fargo"},"account_nickname":{"type":"string","description":"desired nickname for the bank account"},"routing_number":{"type":"string","description":"nine-digit routing number for the bank account"},"account_number":{"type":"string","description":"account number for the bank account"},"account_type":{"type":"string","description":"account type for the bank account","enum":["checking","savings"]},"account_owner_name":{"type":"string","description":"business name or legal name of account owner"}}},"terms_and_conditions":{"type":"object","description":"details about accepting JustiFi\'s terms and conditions on behalf of a sub account","properties":{"accepted":{"type":"boolean","description":"whether the sub account has read and accepted JustiFi\'s terms and conditions"},"ip":{"type":"string","description":"the IP address used when the terms and conditions were accepted"},"user_agent":{"type":"string","description":"the user agent used when the terms and conditions were accepted"}}}}},"PayoutBankAccount":{"type":"object","properties":{"id":{"description":"unique bank account id","type":"string","format":"uuid"},"full_name":{"description":"account holder\'s full name","type":"string"},"bank_name":{"description":"name of bank","type":"string"},"account_number_last4":{"description":"last 4 digits of the account number","type":"string","example":1111},"routing_number":{"type":"string"},"country":{"type":"string","enum":["US"],"example":"US"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"nickname":{"type":"string"},"account_type":{"type":"string","enum":["checking"]}}},"Proceed":{"type":"object","properties":{"id":{"description":"unique proceeds payout id","type":"string","example":"po_xyz"},"account_id":{"description":"id of the account associated with the proceeds payout","type":"string","format":"uuid"},"amount":{"description":"proceeds payout amount in cents","type":"number","example":100000},"bank_account":{"$ref":"#/components/schemas/PayoutBankAccount"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"delivery_method":{"description":"how the proceeds payout is delivered","type":"string","enum":["standard"]},"description":{"type":"string","nullable":true},"deposits_at":{"description":"in UTC, the date and time of the proceeds payout deposit (or in rare cases, withdrawal)","type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"refunds_count":{"description":"number of refunds that impacted the proceeds payout","type":"number","example":5},"refunds_total":{"description":"sum deducted from the proceeds payout as a result of accounts\' refunds, in cents","type":"number","example":10000},"payments_count":{"description":"number of payments that impacted the proceeds payout","type":"number","example":50},"payments_total":{"description":"sum added to the proceeds payout as a result of accounts\' payments, in cents","type":"number","example":110000},"payout_type":{"description":"proceeds payouts are always of the type \\"proceeds\\" (other types apply only to sub accounts payouts)","type":"string","enum":["proceeds"]},"other_total":{"description":"sum of other less common transactions that impacted the proceeds payout, in cents","type":"number","example":100},"status":{"description":"status of the proceeds payout","type":"string","example":"scheduled","enum":["scheduled paid failed pending in_transit canceled"]},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this proceeds payout","example":{"platform_payout_id":"cp_12345"}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Card":{"type":"object","properties":{"id":{"description":"unique card id","type":"string","format":"uuid","example":"pm_123xyz"},"acct_last_four":{"description":"last 4 digits of the card number","type":"string","example":4242},"brand":{"description":"card brand or bank name","example":"Visa"},"name":{"description":"card or account holder name","example":"Amanda Kessel"},"token":{"description":"same value as unique card id; can be saved and used to process multiple\\npayments with the same card\\n","example":"pm_123xyz"},"month":{"description":"expiration date month","example":"5"},"year":{"description":"expiration date year","example":"2042"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this card","example":{}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"address_line1_check":{"type":"string","example":"unchecked","enum":["fail","pass","unavailable","unchecked"]},"address_postal_code_check":{"type":"string","example":"unchecked","enum":["fail","pass","unavailable","unchecked"]},"bin_details":{"type":"object","format":"json","description":"the bin details associated with this card","example":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}}}},"CardPaymentMethod":{"type":"object","properties":{"card":{"$ref":"#/components/schemas/Card"},"customer_id":{"description":"id of the customer associated with the payment method","type":"string","example":"cust_xyz","nullable":true},"signature":{"description":"signature that uniquely identifies a credit card or bank account across payment methods","type":"string","example":"4guAJNkVA3lRLVlanNVoBK","nullable":true},"account_id":{"description":"account id associated with payment method","type":"string","example":"acc_123","nullable":true}}},"CardPaymentIntent":{"type":"object","properties":{"id":{"description":"unique payment intent id","type":"string","example":"pi_xyz"},"account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"amount":{"description":"the amount charged in cents","type":"number","example":10000},"currency":{"type":"string","enum":["usd"],"example":"usd"},"description":{"type":"string","description":"your meaningful description of the payment (e.g. an order number or other value from your system)","example":"my_order_xyz"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment intent","example":{}},"payment_method":{"description":"will include the payment method once one is attached","$ref":"#/components/schemas/CardPaymentMethod"},"status":{"type":"string","enum":["requires_payment_method","pending","requires_capture","canceled","succeeded"],"description":"status of the payment intent"},"successful_payment_id":{"type":"string","format":"uuid","example":"py_xyz","description":"payment id, if this payment intent was paid for successfully"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"BankAccount":{"type":"object","properties":{"id":{"description":"unique bank account id","type":"string","format":"uuid","example":"pm_123xyz"},"acct_last_four":{"description":"last 4 digits of the account number","type":"string","example":1111},"brand":{"description":"bank name","example":"Wells Fargo"},"name":{"description":"account holder name","example":"Phil Kessel"},"token":{"description":"same value as unique bank account id; can be saved and used to process multiple\\npayments with the same bank account\\n","example":"pm_123xyz"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this bank account","example":{}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"BankAccountPaymentMethod":{"type":"object","properties":{"bank_account":{"$ref":"#/components/schemas/BankAccount"},"customer_id":{"description":"id of the customer associated with the payment method","type":"string","example":"cust_xyz","nullable":true},"signature":{"description":"signature that uniquely identifies a credit card or bank account across payment methods","type":"string","example":"4guAJNkVA3lRLVlanNVoBK","nullable":true},"account_id":{"description":"account id associated with payment method","type":"string","example":"acc_123","nullable":true}}},"BankAccountPaymentIntent":{"type":"object","properties":{"id":{"description":"unique payment intent id","type":"string","example":"pi_xyz"},"account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"amount":{"description":"the amount charged in cents","type":"number","example":10000},"currency":{"type":"string","enum":["usd"],"example":"usd"},"description":{"type":"string","description":"your meaningful description of the payment (e.g. an order number or other value from your system)","example":"my_order_xyz"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment intent","example":{}},"payment_method":{"description":"will include the payment method once one is attached","$ref":"#/components/schemas/BankAccountPaymentMethod"},"status":{"type":"string","enum":["requires_payment_method","pending","requires_capture","canceled","succeeded"],"description":"status of the payment intent"},"successful_payment_id":{"type":"string","format":"uuid","example":"py_xyz","description":"payment id, if this payment intent was paid for successfully"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"CreateCard":{"type":"object","properties":{"name":{"description":"cardholder full name","type":"string","example":"Kevin Garnett"},"number":{"description":"card number","type":"string","example":4242424242424242},"verification":{"description":"card verification number","type":"string","example":123},"month":{"description":"card expiration month","type":"string","example":5},"year":{"description":"card expiration year","type":"string","example":2042},"address_line1":{"description":"card address street","type":"string","example":"123 Fake St"},"address_line2":{"description":"card address apartment, suite, etc.","type":"string","example":"Suite 101"},"address_city":{"description":"card address city","type":"string","example":"Cityville"},"address_state":{"description":"card address state","type":"string","example":"MN"},"address_postal_code":{"description":"card address ZIP","type":"string","example":55555},"address_country":{"description":"card address 2-character country code","type":"string","example":"US"},"brand":{"description":"card brand or institution","type":"string","example":"Visa"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this card","example":{}}},"required":["name","number","month","year","address_postal_code"]},"ApplicationFee":{"type":"object","properties":{"id":{"description":"unique application fee id","type":"string","format":"uuid","example":"fee_123xyz"},"amount":{"description":"application fee amount, in cents","type":"number","example":150},"currency":{"type":"string","enum":["usd"],"example":"usd"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"CardPayment":{"type":"object","properties":{"id":{"description":"unique payment id","type":"string","example":"py_xyz"},"account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"amount":{"description":"payment amount in cents","type":"number","example":10000},"amount_disputed":{"description":"sum of open or lost disputes for this payment, in cents","type":"number","example":0},"amount_refunded":{"description":"sum of refunds for this payment, in cents","type":"number","example":0},"amount_refundable":{"description":"amount of this payment currently able to be refunded, in cents","type":"number","example":10000},"balance":{"description":"sum of debits and credits for this payment, in cents (reflects the amount this account has earned from this payment)","type":"number","example":99850},"fee_amount":{"type":"number","description":"sum of fees for this payment","example":150},"financial_transaction_id":{"type":"string","description":"associated financial transaction id","example":"ft_123xyz"},"captured":{"description":"whether or not this payment is captured","type":"boolean","example":true},"capture_strategy":{"type":"string","example":"automatic","enum":["automatic","manual"]},"currency":{"type":"string","enum":["usd"],"example":"usd"},"description":{"type":"string","description":"your meaningful description of the payment (e.g. an order number or other value from your system)","example":"my_order_xyz"},"disputed":{"type":"boolean","description":"whether or not this payment has any open or lost disputes","example":false},"disputes":{"type":"array","description":"list of associated disputes","example":[]},"error_code":{"type":"string","description":"error code if the payment fails","example":"credit_card_number_invalid"},"error_description":{"type":"string","description":"text description of the error code","example":"Credit Card Number Invalid (Failed LUHN checksum)"},"is_test":{"type":"boolean","description":"whether or not this payment was made using the test account","example":true},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment","example":{}},"payment_intent_id":{"type":"string","description":"unique id of associated payment intent","example":"pi_123xyz"},"payment_method":{"$ref":"#/components/schemas/CardPaymentMethod"},"application_fee":{"$ref":"#/components/schemas/ApplicationFee"},"refunded":{"type":"boolean","description":"whether or not this payment has any refunds","example":false},"status":{"type":"string","enum":["pending","authorized","succeeded","failed","partially_refunded","fully_refunded","disputed"],"description":"status of the payment"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"BankAccountPayment":{"type":"object","properties":{"id":{"description":"unique payment id","type":"string","example":"py_xyz"},"account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"amount":{"description":"payment amount in cents","type":"number","example":10000},"amount_disputed":{"description":"sum of open or lost disputes for this payment, in cents","type":"number","example":0},"amount_refunded":{"description":"sum of refunds for this payment, in cents","type":"number","example":0},"amount_refundable":{"description":"amount of this payment currently able to be refunded, in cents","type":"number","example":10000},"balance":{"description":"sum of debits and credits for this payment, in cents (reflects the amount this account has earned from this payment)","type":"number","example":99850},"fee_amount":{"type":"number","description":"sum of fees for this payment","example":150},"financial_transaction_id":{"type":"string","description":"associated financial transaction id","example":"ft_123xyz"},"captured":{"description":"whether or not this payment is captured","type":"boolean","example":true},"capture_strategy":{"type":"string","example":"automatic","enum":["automatic","manual"]},"currency":{"type":"string","enum":["usd"],"example":"usd"},"description":{"type":"string","description":"your meaningful description of the payment (e.g. an order number or other value from your system)","example":"my_order_xyz"},"disputed":{"type":"boolean","description":"whether or not this payment has any open or lost disputes","example":false},"disputes":{"type":"array","description":"list of associated disputes","example":[]},"error_code":{"type":"string","description":"error code if the payment fails","example":"credit_card_number_invalid"},"error_description":{"type":"string","description":"text description of the error code","example":"Credit Card Number Invalid (Failed LUHN checksum)"},"is_test":{"type":"boolean","description":"whether or not this payment was made using the test account","example":true},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment","example":{}},"payment_intent_id":{"type":"string","description":"unique id of associated payment intent","example":"pi_123xyz"},"payment_method":{"$ref":"#/components/schemas/BankAccountPaymentMethod"},"application_fee":{"$ref":"#/components/schemas/ApplicationFee"},"refunded":{"type":"boolean","description":"whether or not this payment has any refunds","example":false},"status":{"type":"string","enum":["pending","authorized","succeeded","failed","partially_refunded","fully_refunded","disputed"],"description":"status of the payment"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"CreateBankAccount":{"type":"object","description":"Bank Account","properties":{"account_owner_name":{"description":"account owner name","type":"string","example":"Lindsay Whalen"},"routing_number":{"description":"routing number","type":"string","example":"110000000"},"account_number":{"description":"bank account number","type":"string","example":"000123456789"},"account_type":{"description":"type of account","type":"string","example":"checking","enum":["checking","savings"]},"account_owner_type":{"description":"type of account holder","type":"string","example":"individual","enum":["individual","company"]},"country":{"description":"country associated with the bank account","type":"string","example":"US"},"currency":{"description":"currency of the bank account","type":"string","example":"usd","enum":["usd"]},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this bank account","example":{}}},"required":["account_owner_name","routing_number","account_number","account_type","account_owner_type","country","currency"]},"Refund":{"type":"object","properties":{"id":{"description":"refund unique id","type":"string","example":"re_xyz"},"payment_id":{"description":"the payment for which this refund is being issued","type":"string","format":"uuid","example":"py_xyz"},"amount":{"description":"the amount of this refund in cents","type":"number","example":100},"description":{"type":"string","description":"an optional note about this refund","example":"customer canceled their order"},"reason":{"description":"the reason this refund is being issued","type":"string","example":"duplicate","enum":["duplicate","fraudulent","customer_request"]},"status":{"description":"the status of this refund","type":"string","example":"succeeded","enum":["pending","succeeded","failed"]},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this refund","example":{}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"PaymentBalanceTransaction":{"type":"object","properties":{"id":{"description":"unique payment balance transaction id","type":"string","format":"uuid","example":"pbt_123xyz"},"amount":{"description":"payment balance transaction amount, in cents","type":"number","example":40145},"balance":{"description":"balance amount of the payment balance transaction, in cents","type":"number","example":53550},"currency":{"type":"string","enum":["usd"],"example":"usd"},"financial_transaction_id":{"description":"id of the financial transaction associated with the payment balance transaction","type":"string","format":"uuid","example":"ft_123xyz"},"payment_id":{"description":"id of the payment associated with the payment balance transaction","type":"string","format":"uuid","example":"py_123xyz"},"payment_balance_txn_type":{"description":"type of the transaction object associated with the payment balance transaction","type":"string","enum":["payment","payment_fee","payout","refund","fee_refund","dispute","dispute_fee","dispute_fee_refund","dispute_refund"],"example":"fee_refund"},"source_id":{"description":"id of the source object associated with the payment balance transaction","type":"string","format":"uuid","example":"fee_123xyz"},"source_type":{"description":"type of the source object associated with the payment balance transaction","type":"string","example":"ApplicationFee"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"CardResponse":{"type":"object","properties":{"id":{"description":"the object id","type":"number","example":"pm_123xyz"},"type":{"description":"the object type, or array of objects","type":"string","example":"payment_method"},"data":{"description":"the attributes for the object","type":"object","properties":{"signature":{"description":"unique signature associated with the payment_method","type":"string","example":"3aGWnUznQ"},"customer_id":{"description":"id of customer associated with the payment_method","type":"string","example":"cust_123abc"},"account_id":{"description":"account id associated with payment method","type":"string","example":"acc_123","nullable":true},"card":{"description":"the card associated with the payment_method","type":"object","properties":{"id":{"description":"unique card payment method id","type":"string","format":"uuid","example":"pm_123xyz"},"name":{"description":"card holder name","type":"string","example":"Lindsay Whalen"},"acct_last_four":{"description":"last 4 digits of the account number","type":"string","example":1111},"brand":{"description":"card brand or institution","type":"string","example":"visa"},"token":{"description":"same value as unique bank account id; can be saved and used to process multiple\\npayments with the same bank account\\n","example":"pm_123xyz"},"month":{"description":"expiration date month","example":"5"},"year":{"description":"expiration date year","example":"2042"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this bank account","example":{"new":"info"}},"address_line1_check":{"description":"address line verification check","example":"pass"},"address_postal_code_check":{"description":"postal code verification check","example":"pass"},"bin_details":{"type":"object","format":"json","description":"the bin details associated with this card","example":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}}}}}},"page_info":{"description":"information for cursor style pagination, is null for single records","type":"string","nullable":true}}},"BankAccountResponse":{"type":"object","properties":{"id":{"description":"the object id","type":"number","example":"pm_123xyz"},"type":{"description":"the object type, or array of objects","type":"string","example":"payment_method"},"data":{"description":"the attributes for the object","type":"object","properties":{"signature":{"description":"unique signature associated with the payment_method","type":"string","example":"3aGWnUznQ"},"customer_id":{"description":"id of customer associated with the payment_method","type":"string","example":"cust_123abc"},"account_id":{"description":"account id associated with payment method","type":"string","example":"acc_123"},"bank_account":{"description":"the bank account associated with the payment_method","type":"object","properties":{"id":{"description":"unique bank account payment method id","type":"string","format":"uuid","example":"pm_123xyz"},"account_owner_name":{"description":"account owner name","type":"string","example":"Lindsay Whalen"},"account_type":{"description":"type of account (checking, savings, etc.)","type":"string","example":"checking"},"bank_name":{"description":"bank name","example":"Wells Fargo"},"acct_last_four":{"description":"last 4 digits of the account number","type":"string","example":1111},"token":{"description":"same value as unique bank account id; can be saved and used to process multiple\\npayments with the same bank account\\n","example":"pm_123xyz"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this bank account","example":{"new":"info"}}}}}},"page_info":{"description":"information for cursor style pagination, is null for single records","type":"string","nullable":true}}},"UpdateCard":{"type":"object","properties":{"month":{"description":"new expiration month","type":"string","example":5},"year":{"description":"new expiration year","type":"string","example":2042},"address_line1":{"description":"new card address street","type":"string","example":"123 Fake St"},"address_line2":{"description":"new card address apartment, suite, etc.","type":"string","example":"Suite 101"},"address_city":{"description":"new card address city","type":"string","example":"Cityville"},"address_state":{"description":"new card address state","type":"string","example":"MN"},"address_postal_code":{"description":"new card address ZIP","type":"string","example":55555},"address_country":{"description":"new card address 2-character country code","type":"string","example":"US"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this card; when you update metadata, any previous metadata will be overwritten","example":{"new":"info"}},"bin_details":{"type":"object","format":"json","description":"the bin details associated with this card","example":{"type":"Debit","card_brand":"Visa","card_class":"NETWORK ONLY","country":"United States of America","issuer":"NETWORK ONLY","funding_source":"Debit"}}}},"UpdateBankAccount":{"type":"object","description":"Bank Account","properties":{"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this bank account; when you update metadata, any previous metadata will be overwritten","example":{"new":"info"}}}},"Payout":{"type":"object","properties":{"id":{"description":"unique payout id","type":"string","example":"po_xyz"},"account_id":{"description":"id of the account associated with the payout","type":"string","format":"uuid"},"amount":{"description":"payout amount in cents","type":"number","example":100000},"bank_account":{"$ref":"#/components/schemas/PayoutBankAccount"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"delivery_method":{"description":"how the payout is delivered","type":"string","enum":["standard"]},"description":{"type":"string","nullable":true},"deposits_at":{"description":"in UTC, the date and time of the payout deposit (or in rare cases, withdrawal)","type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"fees_total":{"description":"sum of fees in the payout, in cents","type":"number","example":5000},"refunds_count":{"description":"number of refunds in the payout","type":"number","example":5},"refunds_total":{"description":"sum of refunds in the payout, in cents","type":"number","example":10000},"payments_count":{"description":"number of payments in the payout","type":"number","example":50},"payments_total":{"description":"sum of payments in the payout, in cents","type":"number","example":110000},"payout_type":{"description":"type of payment method used for the payments in the payout (funds from different types of payment methods settle at different intervals; in order to pay out your funds ASAP, we batch separate payouts for each payment method type)","type":"string","enum":["ach cc"]},"other_total":{"description":"sum of other less common transactions in the payout, in cents","type":"number","example":100},"status":{"description":"status of the payout","type":"string","example":"paid","enum":["paid failed forwarded scheduled in_transit canceled"]},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payout","example":{"customer_payout_id":"cp_12345"}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"PayoutCsvReport":{"type":"object","properties":{"id":{"description":"unique payout id","type":"string","example":"po_xyz"},"csv_url":{"description":"url that links to downloadable CSV report for payout.","type":"string","example":"https://justifi-test-payouts-reports.s3.amazonaws.com/acc_1234lkj/po_23jdfi36dqhj.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=test"}}},"BalanceTransaction":{"type":"object","properties":{"id":{"description":"unique balance transaction id","type":"string","example":"bt_xyz"},"account_id":{"description":"id of the account associated with the balance transaction","type":"string","format":"uuid","example":"acc_xyz"},"amount":{"description":"balance transaction amount, in cents","type":"number","example":100000},"available_on":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"currency":{"type":"string","enum":["usd"],"example":"usd"},"description":{"type":"string","nullable":true},"fee":{"description":"amount of fees deducted from the balance transaction amount, in cents","type":"number","example":5000},"financial_transaction_id":{"description":"id of the financial transaction associated with the balance transaction","type":"string","format":"uuid","example":"ft_xyz"},"net":{"description":"net amount of the balance transaction (after fees are deducted), in cents","type":"number","example":600},"payout_id":{"description":"id of the payout associated with the balance transaction","type":"string","format":"uuid","example":"po_xyz"},"source_id":{"description":"id of the source object associated with the balance transaction","type":"string","format":"uuid","example":"py_xyz"},"source_type":{"description":"type of source object associated with the balance transaction (for example payment, refund, dispute, payout)","type":"string","example":"payment"},"txn_type":{"description":"type of transaction object associated with the balance transaction","type":"string","example":"seller_payment"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Dispute":{"type":"object","properties":{"id":{"description":"unique dispute id","type":"string","example":"dp_xyz"},"amount":{"description":"amount disputed in cents","type":"number","example":100},"currency":{"type":"string","enum":["usd"],"example":"usd"},"payment_id":{"description":"the disputed payment","type":"string","format":"uuid","example":"py_xyz"},"reason":{"type":"string","description":"the reason this payment was disputed","example":"fraudulent"},"status":{"description":"status of the dispute","type":"string","example":"won","enum":["needs_response","under_review","won","lost"]},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this dispute","example":{}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"InsurancePolicy":{"type":"object","properties":{"id":{"description":"unique record id","type":"string","example":"ins_xyz"},"account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"amount":{"description":"the amount charged in cents","type":"number","example":10000},"currency":{"type":"string","enum":["usd"],"example":"usd"},"partner_name":{"type":"string","description":"partner insurance provider name","example":"vertical_insure"},"partner_quote_id":{"type":"string","description":"quote id provided by partner provider","example":"test-123"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this payment intent","example":{}},"status":{"type":"string","enum":["created","bound"],"description":"status of the payment intent"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"AddressResponse":{"type":"object","properties":{"id":{"description":"unique address id","type":"string","example":"addr_123xyz"},"line1":{"type":"string","example":"123 Example St"},"line2":{"type":"string","example":"Suite 101"},"city":{"type":"string","example":"Minneapolis"},"state":{"type":"string","example":"MN"},"postal_code":{"type":"string","example":"55555"},"country":{"type":"string","example":"USA"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Document":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"doc_abc123"},"description":{"type":"string","example":"My Document","description":"description of the document, used for your reference"},"file_name":{"type":"string","example":"my_document","description":"file name of the document"},"file_type":{"type":"string","example":"pdf","description":"the file media type/extension of the file you are uploading. For example, text/plain, application/pdf, image/png"},"document_type":{"type":"string","enum":["balance_sheet","bank_statement","government_id","profit_and_loss_statement","tax_return","other"],"example":"balance_sheet"},"business_id":{"type":"string","format":"uuid","example":"biz_abc123","description":"the business id to associate with this document (one of business id or identity id is required)"},"identity_id":{"type":"string","format":"uuid","example":"idty_abc123","description":"the identity id to associate with this document (one of business id or identity id is required)"},"presigned_url":{"type":"string","format":"url","description":"url used to PUT or GET the document to our cloud provider. This is not returned via the list API","example":"https://test.test/doc_abc123/file_name.pdf"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this document","additionalProperties":true,"example":{"language":"english","social_network":"@person"}},"status":{"type":"string","enum":["pending uploaded canceled"]},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"IdentityResponse":{"type":"object","properties":{"id":{"description":"unique identity id","type":"string","example":"idty_xyz"},"platform_account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"business_id":{"type":"string","format":"uuid","example":"biz_xyz","description":"associated business"},"name":{"type":"string","example":"Person Name","description":"legal name"},"title":{"type":"string","example":"President","description":"job title"},"email":{"type":"string","example":"person.name@justifi.ai","description":"email address"},"phone":{"type":"string","example":"6124011111","description":"phone number"},"dob_day":{"type":"string","example":"01","description":"two-digit birth day"},"dob_month":{"type":"string","example":"01","description":"two-digit birth month"},"dob_year":{"type":"string","example":"1980","description":"four-digit birth year (must be at least 18 years old)"},"ssn_last4":{"type":"string","example":"6789","description":"last four digits of social security number"},"is_owner":{"type":"boolean","example":true,"description":"if an identity owns 25% or more of the business, they are considered an owner"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this identity"},"address":{"$ref":"#/components/schemas/AddressResponse"},"documents":{"type":"array","items":{"$ref":"#/components/schemas/Document"}},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"EntityBankAccount":{"type":"object","properties":{"id":{"description":"unique bank account id","type":"string","format":"uuid","example":"ba_123xyz"},"account_owner_name":{"description":"name of the account owner","type":"string","example":"Napheesa Collier"},"account_type":{"description":"type of the account","type":"string","enum":["checking savings"],"example":"checking"},"acct_last_four":{"description":"last 4 digits of the account number","type":"string","example":"6789"},"routing_number":{"description":"routing number for account","type":"string","example":"110000000"},"bank_name":{"description":"name of the bank","type":"string","example":"Wells Fargo"},"country":{"description":"country for the bank account","type":"string","enum":["US"]},"currency":{"description":"currency for the bank account","type":"string","enum":["usd"]},"nickname":{"description":"nickname for the bank account","type":"string","example":"Phee\'s money"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this bank account","example":{}},"business_id":{"type":"string","format":"uuid","example":"biz_123abc"},"platform_account_id":{"type":"string","format":"uuid","example":"acc_123abc"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"AdditionalQuestions":{"type":"object","properties":{"business_revenue":{"type":"string","example":"84220","description":"amount of money the company receives from its primary business activities"},"business_purchase_order_volume":{"type":"string","example":"150","description":"total number of purchase orders made by a business"},"business_invoice_volume":{"type":"string","example":"500","description":"total number of invoices generated by a business"},"business_fund_use_intent":{"type":"string","example":"expanding marketing efforts","description":"planned purpose for which a business intends to use funds"},"equipment_invoice":{"type":"string","example":"$10,000 invoice for computer equipment","description":"document specifying the cost and details of equipment purchased"},"business_invoice_number":{"type":"string","example":"202105-001","description":"unique identifier assigned to a specific invoice issued by a business"},"business_invoice_amount":{"type":"string","example":"$4500","description":"total monetary value stated on an invoice issued by a business"},"business_purchase_order_number":{"type":"string","example":"120","description":"number of unique purchase orders made by a business"},"industry_code":{"type":"string","example":"541512","description":"numerical or alphanumeric code that classifies businesses according to their industry"},"duns_number":{"type":"string","example":"123456789","description":"unique nine-digit identification number assigned to a business entity"},"business_payment_volume":{"type":"string","example":"1000000","description":"total value of payments processed by a business (annual volume)"},"business_payment_decline_volume":{"type":"string","example":"500","description":"total number of payment declines experienced by a business"},"business_refund_volume":{"type":"string","example":"100","description":"total number of refunds issued by a business"},"business_dispute_volume":{"type":"string","example":"50","description":"total number of disputes raised by customers against a business"},"business_receivable_volume":{"type":"string","example":"US $100,000","description":"total value of outstanding payments owed to a business"},"business_future_scheduled_payment_volume":{"type":"string","example":"200","description":"total number of future scheduled payments for a business"},"business_dispute_win_rate":{"type":"string","example":"75%","description":"percentage of business disputes won out of the total number of disputes"},"length_of_business_relationship":{"type":"string","example":"5 years","description":"duration of a business relationship between two parties"}}},"BusinessResponse":{"type":"object","properties":{"id":{"description":"unique business id","type":"string","example":"biz_xyz"},"platform_account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"legal_name":{"type":"string","example":"Business Name","description":"legal business entity name"},"website_url":{"type":"string","example":"https://justifi.ai","description":"website for this business (if they don\'t have a website, can send their social media business page, app store link, or a product description instead)"},"email":{"type":"string","example":"business@justifi.ai","description":"email address of business entity or representative"},"phone":{"type":"string","example":"6124011111","description":"business phone number"},"doing_business_as":{"type":"string","example":"Best Business","description":"only needed if registered with DBA/Trade Name on SS-4 tax document"},"business_type":{"type":"string","enum":["for_profit","non_profit","government_entity","individual"]},"business_structure":{"type":"string","enum":["sole_proprietorship","single_llc","multi_llc","private_partnership","private_corporation","unincorporated_association","public_partnership","public_corporation","incorporated","unincorporated","government_unit","government_instrumentality","tax_exempt_government_instrumentality"]},"industry":{"type":"string","example":"Big Business","description":"to help us identify this business entity\'s category code (MCC), please provide a concise description of what service they offer"},"mcc":{"type":"string","example":"8021","description":"merchant category code for this business, if known. Please note, the JustiFi underwriting team may modify this. If you are unsure, just submit a description in the industry field instead of an MCC"},"tax_id":{"type":"string","description":"the federal tax identification number/EIN issued to this sub account by the IRS (for Individual type, this will be their full SSN)"},"date_of_incorporation":{"type":"string","example":"2015-02-20"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this business"},"legal_address":{"$ref":"#/components/schemas/AddressResponse"},"representative":{"$ref":"#/components/schemas/IdentityResponse"},"owners":{"type":"array","items":{"$ref":"#/components/schemas/IdentityResponse"}},"documents":{"type":"array","items":{"$ref":"#/components/schemas/Document"}},"bank_accounts":{"type":"array","items":{"$ref":"#/components/schemas/EntityBankAccount"}},"additional_questions":{"$ref":"#/components/schemas/AdditionalQuestions"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Address":{"type":"object","properties":{"line1":{"type":"string","example":"123 Example St"},"line2":{"type":"string","example":"Suite 101"},"city":{"type":"string","example":"Minneapolis"},"state":{"type":"string","example":"MN"},"postal_code":{"type":"string","example":"55555"},"country":{"type":"string","example":"USA"}}},"Identity":{"type":"object","properties":{"name":{"type":"string","example":"Person Name","description":"legal name"},"title":{"type":"string","example":"President","description":"job title"},"email":{"type":"string","example":"person.name@justifi.ai","description":"email address"},"phone":{"type":"string","example":"6124011111","description":"phone number"},"dob_day":{"type":"string","example":"01","description":"two-digit birth day"},"dob_month":{"type":"string","example":"01","description":"two-digit birth month"},"dob_year":{"type":"string","example":"1980","description":"four-digit birth year (must be at least 18 years old)"},"identification_number":{"type":"string","example":"123456789","description":"full social security number"},"is_owner":{"type":"boolean","description":"if an identity owns 25% or more of the business, they are considered an owner"},"metadata":{"type":"object","format":"json","description":"any useful information you\'d like to store alongside this identity","additionalProperties":true,"example":{"language":"english","social_network":"@person"}},"address":{"oneOf":[{"$ref":"#/components/schemas/Address"},{"type":"object","properties":{"id":{"type":"string"}}}]}}},"ProvisioningResponse":{"type":"object","properties":{"account_type":{"description":"account type (live or test)","type":"string","example":"test"},"sub_account_id":{"type":"string","format":"uuid","example":"acc_xyz"},"platform_account_id":{"type":"string","format":"uuid","example":"acc_123"},"payload":{"type":"object","description":"business information"}}},"AchReturnFee":{"type":"object","properties":{"id":{"description":"unique ach return fee id","type":"string","example":"arf_123xyz"},"payment_id":{"description":"the payment for which this ach return fee is being issued","type":"string","example":"py_123xyz"},"amount":{"description":"ach return fee amount, in cents","type":"number","example":150},"currency":{"type":"string","enum":["usd"],"example":"usd"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Terminal":{"type":"object","properties":{"id":{"description":"unique terminal id","type":"string","example":"trm_abc123"},"account_id":{"description":"id of the account associated with the terminal","type":"string","format":"uuid"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"TerminalStatus":{"type":"object","properties":{"id":{"description":"unique terminal id","type":"string","example":"trm_abc123"},"status":{"description":"current terminal status","example":"CONNECTED","type":"string"},"last_date_time_connected":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"last_date_time_active":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}},"Event":{"type":"object","properties":{"id":{"description":"event unique id","type":"string","example":"evt_123xyz"},"idempotency_key":{"description":"idempotency key for request, when available","type":"string","nullable":true},"request_id":{"description":"id for request, when available","type":"string","nullable":true},"account_id":{"description":"sub account id for event","type":"string","example":"acc_123xyz"},"account_type":{"description":"live or test account","type":"string","example":"test"},"platform_account_id":{"description":"platform account id for event, when available","type":"string","example":"acc_123xyz","nullable":true},"data":{"description":"the attributes for the object","type":"object"},"version":{"description":"version of the event payload","type":"string","example":"v1"},"event_name":{"description":"name of the event (payment.succeeded, sub_account.updated, etc.)","example":"payment.succeeded","type":"string"}}},"ApplicationFeeRate":{"type":"object","properties":{"id":{"description":"unique application fee rate id","type":"string","format":"uuid","example":"afr_123xyz"},"transaction_fee":{"description":"transaction fee amount, in cents","type":"number","example":50},"currency":{"type":"string","enum":["usd"],"example":"usd"},"basis_point_rate":{"description":"variable percentage of the payment amount that, combined with transaction fee, will be charged as the application fee. Expressed as the number of basis points","type":"number","example":250},"rate_type":{"type":"string","enum":["cc","ach"],"example":"cc"},"created_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"effective_start":{"description":"date and time (UTC) application fee rate went into effect","type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"},"effective_end":{"description":"date and time (UTC) application fee rate is effectively archived. If null, no end date is currently assigned and application fee rate is currently effective","type":"string","format":"date-time","example":"2021-01-01T12:00:00Z"}}}}}}}')}}]);